<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

     <context:annotation-config/>

	<!-- Spring Integration -->
	<import resource="classpath:/blcore/integration/hot-folder-store-electronics-spring.xml"/>
	<import resource="classpath:/blcore/integration/hot-folder-store-apparel-spring.xml"/>
	<import resource="classpath:/blcore/integration/hot-folder-common-spring.xml"/>

	<!-- SystemSetup for the BlCore -->
	<bean id="acceleratorCoreSystemSetup" class="com.bl.core.setup.CoreSystemSetup"
	       parent="abstractCoreSystemSetup"/>

	<bean id="blBrandCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="blBrandCategorySourceResolver"/>
	</bean>

	<bean id="blCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="blBrandCategorySourceResolver"/>
	</bean>

	<bean id="abstractCategoryCodeValueProvider" abstract="true"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>
	<bean id="abstractCategoryNameValueProvider" abstract="true"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryNameValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="image515ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="515Wx515H"/>
	</bean>
	<bean id="image300ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="300Wx300H"/>
	</bean>
	<bean id="image96ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="96Wx96H"/>
	</bean>
	<bean id="image65ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="65Wx65H"/>
	</bean>
	<bean id="image30ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="30Wx30H"/>
	</bean>

	<bean id="productUrlValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.ProductUrlValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="urlResolver" ref="productModelUrlResolver"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="promotionCodeValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PromotionCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>

	<bean id="promotionImageValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PrimaryPromotionImageValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>


	<!--
		Event listeners are singletons, therefore the dependency for a bean in tenant-scope
		must be configured with a lookup method.
	-->
	<bean id="orderCancelledEventListener"
	      class="com.bl.core.event.OrderCancelledEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderRefundEventListener"
	      class="com.bl.core.event.OrderRefundEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="customerRegistrationEventListener"
	      class="com.bl.core.event.RegistrationEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="forgottenPasswordEventListener"
	      class="com.bl.core.event.ForgottenPasswordEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="submitOrderEventListener" class="com.bl.core.event.SubmitOrderEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="modelService" ref="modelService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>
	<bean id="orderConfirmationEventListener"
	      class="com.bl.core.event.OrderConfirmationEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendDeliveryMessageEventListener"
	      class="com.bl.core.event.SendDeliveryMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendReadyForPickupMessageEventListener"
	      class="com.bl.core.event.SendReadyForPickupMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledMessageEventListener"
	      class="com.bl.core.event.SendOrderPartiallyCanceledMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedMessageEventListener"
	      class="com.bl.core.event.SendOrderPartiallyRefundedMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledMessageEventListener"
	      class="com.bl.core.event.SendNotPickedUpConsignmentCanceledMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderCompletedEventListener" class="com.bl.core.event.OrderCompletedEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<!-- Process resources definition -->

	<bean id="customerRegistrationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/customerRegistrationEmailProcess.xml"/>
	</bean>
	<bean id="forgottenPasswordEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/forgottenPasswordEmailProcess.xml"/>
	</bean>
	<bean id="orderConfirmationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/orderConfirmationEmailProcess.xml"/>
	</bean>
	<bean id="sendDeliveryEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendDeliveryEmailProcess.xml"/>
	</bean>
	<bean id="sendReadyForPickupEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendReadyForPickupEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderCancelledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderCancelledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderRefundEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderRefundEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderPartiallyCanceledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderPartiallyRefundedEmailProcess.xml"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendNotPickedUpConsignmentCanceledEmailProcess.xml"/>
	</bean>

	<!-- Actions -->
	<bean id="abstractAction" class="de.hybris.platform.processengine.action.AbstractAction"
	      abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="processParameterHelper" ref="processParameterHelper"/>
	</bean>

	<bean id="sendEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.SendEmailAction"
	       parent="abstractAction">
		<property name="emailService" ref="emailService"/>
	</bean>

	<bean id="abstractGenerateEmailAction" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction"
	      parent="abstractAction" abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="emailGenerationService" ref="emailGenerationService"/>
	</bean>

	<bean id="generateCustomerRegistrationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="CustomerRegistrationEmailTemplate"/>
	</bean>

	<bean id="generateForgottenPasswordEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ForgottenPasswordEmailTemplate"/>
	</bean>

	<bean id="generateOrderConfirmationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderConfirmationEmailTemplate"/>
	</bean>

	<bean id="generateDeliverySentEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="DeliverySentEmailTemplate"/>
	</bean>

	<bean id="generateReadyForPickupEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ReadyForPickupEmailTemplate"/>
	</bean>

	<bean id="generateOrderCancelledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderCancelledEmailTemplate"/>
	</bean>

	<bean id="generateOrderRefundEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderRefundEmailTemplate"/>
	</bean>

	<bean id="generateOrderPartiallyCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyCanceledEmailTemplate"/>
	</bean>
	<bean id="generateOrderPartiallyRefundedEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyRefundedEmailTemplate"/>
	</bean>
	<bean id="generateNotPickedUpConsignmentCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="NotPickedUpConsignmentCanceledEmailTemplate"/>
	</bean>

	<bean id="removeSentEmail"
	      class="de.hybris.platform.acceleratorservices.process.email.actions.RemoveSentEmailAction"
	      parent="abstractAction">
		<property name="modelService" ref="modelService"/>
	</bean>

    <bean id="markQuoteNotificationAsSent"
          class="com.bl.core.actions.quote.MarkQuoteNotificationAsSentAction"
          parent="abstractAction" abstract="true">
        <property name="quoteService" ref="quoteService"/>
    </bean>

	<!-- Simple Suggestion Service -->
	<alias alias="simpleSuggestionService" name="defaultSimpleSuggestionService"/>
	<bean id="defaultSimpleSuggestionService"
	      class="com.bl.core.suggestion.impl.DefaultSimpleSuggestionService" >
		<property name="simpleSuggestionDao" ref="simpleSuggestionDao"/>
	</bean>
	<alias alias="simpleSuggestionDao" name="defaultSimpleSuggestionDao"/>
	<bean id="defaultSimpleSuggestionDao"
	      class="com.bl.core.suggestion.dao.impl.DefaultSimpleSuggestionDao"
	      parent="abstractItemDao" >
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!-- Sales quote process actions -->

	<!-- quote-->
	<bean id="quoteBuyerSubmitEventListener" class="com.bl.core.event.QuoteBuyerSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteSalesRepSubmitEventListener" class="com.bl.core.event.QuoteSalesRepSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteSellerApprovalSubmitEventListener" class="com.bl.core.event.QuoteSellerApprovalSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteBuyerOrderPlacedEventListener" class="com.bl.core.event.QuoteBuyerOrderPlacedEventListener"
		  parent="abstractEventListener">
		<property name="commerceQuoteService" ref="commerceQuoteService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<bean id="quoteToExpireSoonEventListener" class="com.bl.core.event.QuoteToExpireSoonEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<bean id="quoteExpiredEventListener" class="com.bl.core.event.QuoteExpiredEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteCancelEventListener" class="com.bl.core.event.QuoteCancelEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteBuyerProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-buyer-process.xml"/>
	</bean>

	<bean id="quoteSalesRepProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-salesrep-process.xml"/>
	</bean>


	<bean id="quoteSellerApprovalProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-seller-approval-process.xml"/>
	</bean>
	
	<bean id="quotePostCancellationProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-post-cancellation-process.xml"/>
	</bean>

	<bean id="quoteToExpireSoonProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-to-expire-soon-email-process.xml"/>
	</bean>
	
	<bean id="quoteExpiredProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-expired-email-process.xml"/>
	</bean>

	<!-- Quotes email notification jobs -->
	<bean id="quoteToExpireSoonJobPerformable"
		  class="com.bl.core.job.QuoteToExpireSoonJobPerformable"
		  parent="abstractJobPerformable">
		<property name="supportedQuoteStatuses">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</property>
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="eventService" ref="eventService" />
		<property name="configurationService" ref="configurationService" />
		<property name="timeService" ref="timeService" />
	</bean>
	
	<bean id="quoteExpiredJobPerformable"
		  class="com.bl.core.job.QuoteExpiredJobPerformable"
		  parent="abstractJobPerformable">
		<property name="supportedQuoteStatuses">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</property>
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="eventService" ref="eventService" />
		<property name="timeService" ref="timeService" />
	</bean>

	<import resource="/blcore/processes/quote/quote-buyer-process-spring.xml"/>
	<import resource="/blcore/processes/quote/quote-salesrep-process-spring.xml"/>
	<import resource="/blcore/processes/quote/quote-seller-approval-process-spring.xml"/>
	
	<import resource="/blcore/processes/quote/quote-to-expire-soon-email-process-spring.xml"/>
	<import resource="/blcore/processes/quote/quote-expired-email-process-spring.xml"/>

	<import resource="/blcore/processes/quote/quote-post-cancellation-process-spring.xml"/>
	
	<!-- Customer cleanup -->
	<alias name="defaultCustomerCleanupRelatedObjectsAction" alias="customerCleanupRelatedObjectsAction"/>
	<bean id="defaultCustomerCleanupRelatedObjectsAction" class="com.bl.core.retention.impl.DefaultCustomerCleanupRelatedObjectsAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="customerCleanupHooks"/>
	</bean>
	
	<!-- Cleanup the customers not owning any order currently and the current date has past deactivation date+retention date. Also removes customers audit records. -->
	<alias name="defaultCustomerNotOwningOrdersRemoveCleanupAction" alias="customerNotOwningOrdersRemoveCleanupAction"/>
	<bean id="defaultCustomerNotOwningOrdersRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="customerCleanupHooks"/>
	</bean>
	
	<!-- Order cleanup -->
	<!-- Cleanup the order related objects and then remove order and its audit records. -->
	<alias name="defaultOrderRemoveCleanupAction" alias="orderRemoveCleanupAction"/>
	<bean id="defaultOrderRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="orderCleanupHooks"/>
	</bean>

	<!-- CsTicket Remove action -->
	<alias name="defaultCSTicketRemoveCleanupAction" alias="csTicketRemoveCleanupAction"/>
	<bean id="defaultCSTicketRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="csTicketCleanupHooks"/>
	</bean>

	<!-- CsTicket Stagnation action -->
	<alias name="defaultCSTicketStagnationAction" alias="csTicketStagnationAction"/>
	<bean id="defaultCSTicketStagnationAction" class="com.bl.core.retention.impl.DefaultCSTicketStagnationAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="csTicketRetentionHooks"/>
		<property name="ticketBusinessService" ref="ticketBusinessService"/>
	</bean>
	
	<!-- Impex Import Services to be used while system initialization or update process -->
	<!-- BlCoreDataImportService class is used to import common data, product catalog, content catalog, store 
    	from coredata while performing system initialization or update process. -->
	<alias name="blCoreDataImportService" alias="coreDataImportService"/>
    <bean id="blCoreDataImportService" class="com.bl.core.dataimport.BlCoreDataImportService" parent="defaultCoreDataImportService"/>
    
    <!-- BlSampleDataImportService class is used to import common data, product catalog, content catalog, store 
    	from sampledata while performing system initialization or update process. -->
    <alias name="blSampleDataImportService" alias="sampleDataImportService"/>
    <bean id="blSampleDataImportService" class="com.bl.core.dataimport.BlSampleDataImportService" parent="defaultSampleDataImportService"/>

	<!-- BL-90 Category Modeling Related changes in Category Prepare Interceptor to generate CategoryId-->
	<alias name="blCategoryPrepareInterceptor" alias="blCategoryPrepareInterceptor"/>
	<bean id="blCategoryPrepareInterceptor" class="com.bl.core.model.interceptor.BlCategoryPrepareInterceptor">
		<property name="keyGenerator" ref="categoryIdGenerator"/>
	</bean>

	<bean id="blCategoryInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blCategoryPrepareInterceptor"/>
		<property name="typeCode" value="Category"/>
	</bean>
	<!-- category Id generator-->
	<bean id="categoryIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.category.id.name}"/>
		<property name="digits" value="${keygen.category.id.digits}"/>
		<property name="start" value="${keygen.category.id.start}"/>
		<property name="type" value="${keygen.category.id.type}"/>
		<property name="template" value="${keygen.category.id.template}"/>
	</bean>

	<!-- BL-91 Product Modeling Related changes in Product Prepare Interceptor for the ProductId Code Generation-->
	<alias name="blProductPrepareInterceptor" alias="blProductPrepareInterceptor"/>
	<bean id="blProductPrepareInterceptor"	class="com.bl.core.model.interceptor.BlProductPrepareInterceptor">
		<property name="keyGenerator" ref="productIdGenerator"/>
		<property name="enumerationService" ref="enumerationService"/>
		<property name="blPricingService" ref="blPricingService"/>
	</bean>

	<bean id="blProductPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blProductPrepareInterceptor"/>
		<property name="typeCode" value="BlProduct"/>
	</bean>

	<!-- product Id generator-->
	<bean id="productIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.product.id.name}"/>
		<property name="digits" value="${keygen.product.id.digits}"/>
		<property name="start" value="${keygen.product.id.start}"/>
		<property name="type" value="${keygen.product.id.type}"/>
		<property name="template" value="${keygen.product.id.template}"/>
	</bean>

	<!--BL-30 : This is created to override register method and disable registration email. -->
	<alias name="defaultBlCustomerAccountService" alias="customerAccountService"/>
	<bean id="defaultBlCustomerAccountService" class="com.bl.core.services.customer.impl.DefaultBlCustomerAccountService" parent="defaultCustomerAccountService"/>


	<!--This is created for override OOB classes to get the media to be indexed to solr -->

	<bean id="defaultBlMediaDao" class="com.bl.core.media.dao.impl.DefaultBlMediaDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<bean  id="defaultBlMediaService" class="com.bl.core.media.impl.DefaultBlMediaService">
		<property name="defaultBlMediaDao" ref="defaultBlMediaDao"/>
	</bean>

	<bean id="defaultBlMediaContainerService" class="com.bl.core.media.impl.DefaultBlMediaContainerService">
		<property name="defaultBlMediaService" ref="defaultBlMediaService"/>
	</bean>


	<!-- BL-110-v2 BLInventoryLocation item Prepare Interceptor to generate inventoryLocationID-->
	<alias name="blInventoryLocationPrepareInterceptor" alias="blInventoryLocationPrepareInterceptor"/>
	<bean id="blInventoryLocationPrepareInterceptor" class="com.bl.core.model.interceptor.BlInventoryLocationPrepareInterceptor">
		<property name="keyGenerator" ref="inventoryLocationIdGenerator"/>
	</bean>

	<bean id="blInventoryLocationPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blInventoryLocationPrepareInterceptor"/>
		<property name="typeCode" value="BLInventoryLocation"/>
	</bean>

	<!-- InventoryLocation Id generator-->
	<bean id="inventoryLocationIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.inventoryLocation.id.name}"/>
		<property name="digits" value="${keygen.inventoryLocation.id.digits}"/>
		<property name="start" value="${keygen.inventoryLocation.id.start}"/>
		<property name="type" value="${keygen.inventoryLocation.id.type}"/>
		<property name="template" value="${keygen.inventoryLocation.id.template}"/>
	</bean>

	<!--BL-91 Adding attribute handler classes for dynamic attributes-->
	<bean id="serialProductNotInServiceHandler" class="com.bl.core.model.handler.SerialProductNotInServiceHandler"/>

	<bean id="serialProductTotalRepairsHandler" class="com.bl.core.model.handler.SerialProductTotalRepairsHandler"/>
	<bean id="serialProductTotalTransitDaysHandler" class="com.bl.core.model.handler.SerialProductTotalTransitDaysHandler"/>


	<!--BL-166 : This bean is override to change default product pattern-->
	<alias name="defaultProductModelUrlResolver" alias="productModelUrlResolver"/>
	<bean id="defaultProductModelUrlResolver"
		class="de.hybris.platform.commerceservices.url.impl.DefaultProductModelUrlResolver">
		<property name="threadContextService" ref="threadContextService"/>
		<property name="commerceCategoryService" ref="commerceCategoryService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="defaultPattern" value="/product/{product-code}"/>
		<property name="productAndCategoryHelper" ref="productAndCategoryHelper"/>
	</bean>

	<!--<BL-467 bean entry is for clear cart>-->
	<alias name="defaultBlCartService" alias="cartService" />
	<bean id="defaultBlCartService" class="com.bl.core.services.cart.impl.DefaultBlCartService" parent="defaultCartService">
		<property name="commerceCartService" ref="commerceCartService" />
		<property name="blCommerceStockService" ref="blCommerceStockService" />
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="blDatePickerService" ref="blDatePickerService" />
		<property name="blCheckoutCartCalculationStrategy" ref="commerceCartCalculationStrategy" />
	</bean>


	<!--Pricing Logic changes-->
	<alias name="defaultBlPricingService" alias="blPricingService"/>
	<bean id="defaultBlPricingService" class="com.bl.core.services.calculation.impl.DefaultBlPricingService">
		<property name="blPricingGenericDao" ref="blPricingGenericDao"/>
		<property name="priceRowGenericDao" ref="priceRowGenericDao"/>
		<property name="modelService" ref="modelService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="enumerationService" ref="enumerationService"/>
		<property name="unitService" ref="unitService"/>
	</bean>

	<alias name="defaultBlPricingGenericDao" alias="blPricingGenericDao"/>
	<bean name="defaultBlPricingGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlPricingLogic"/>
	</bean>
	<alias name="defaultPriceRowGenericDao" alias="priceRowGenericDao"/>
	<bean name="defaultPriceRowGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="PriceRow"/>
	</bean>
	<alias name="defaultBlStandardRatioGenericDao" alias="blStandardRatioGenericDao"/>
	<bean name="defaultBlStandardRatioGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlStandardPricingRatio"/>
	</bean>
	<alias name="defaultBlConstrainedRatioGenericDao" alias="blConstrainedRatioGenericDao"/>
	<bean name="defaultBlConstrainedRatioGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlConstrainedPricingRatio"/>
	</bean>
	<alias name="defaultBlPricingRatioService" alias="blPricingRatioService"/>
	<bean id="defaultBlPricingRatioService" class="com.bl.core.services.pricingratio.impl.DefaultBlPricingRatioService">
	<property name="blConstrainedRatioGenericDao" ref="blConstrainedRatioGenericDao"/>
	<property name="blStandardRatioGenericDao" ref="blStandardRatioGenericDao"/>
	</bean>

	<alias name="blSerialProductPrepareInterceptor" alias="blSerialProductPrepareInterceptor"/>
	<bean id="blSerialProductPrepareInterceptor" class="com.bl.core.model.interceptor.BlSerialProductPrepareInterceptor">
		<property name="blPricingService" ref="blPricingService"/>
		<property name="blStockService" ref="blStockService"/>
	</bean>

	<bean id="blSerialProductPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blSerialProductPrepareInterceptor"/>
		<property name="typeCode" value="BlSerialProduct"/>
	</bean>
	
	<!--Bl-57 new stock related service and dao classes added-->
	<alias alias="blStockLevelDao" name="defaultBlStockLevelDao"/>
	<bean id="defaultBlStockLevelDao" class="com.bl.core.stock.impl.DefaultBlStockLevelDao" parent="stockLevelDao">
	</bean>
	
	<bean id="blCommerceStockService" class="com.bl.core.stock.impl.DefaultBlCommerceStockService">
		<property name="blStockLevelDao" ref="blStockLevelDao"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="blDatePickerService" ref="blDatePickerService" />
	</bean>
	
	<!-- BL-73 Created bean for discontinued product -->	
	<bean id="blRentalGearDiscontinuedProductValueProvider" class="com.bl.core.search.solrfacetsearch.provider.impl.BlRentalGearDiscontinuedProductValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>
	
	<!-- BL-483 BL Pricing Strategy file to calculate Dynamic Price -->
	<alias name="defaultBlProductDynamicPriceStrategy" alias="blProductDynamicPriceStrategy"/>
	<bean id="defaultBlProductDynamicPriceStrategy" class="com.bl.core.price.strategies.impl.DefaultBlProductDynamicPriceStrategy">
		<property name="blPricingRatioService" ref="blPricingRatioService"/>
	</bean>
	
	<!-- BL-483 Extended OOTB Commerce Price Service to get Dynamic Pricing for Rental Products on the basis of seleted Rental Days -->
	<alias alias="commercePriceService" name="defaultBlCommercePriceService"/>
    <bean id="defaultBlCommercePriceService" class="com.bl.core.price.service.impl.DefaultBlCommercePriceService" parent="defaultCommercePriceService">
        <property name="blProductDynamicPriceStrategy" ref="blProductDynamicPriceStrategy"/>
        <property name="blDatePickerService" ref="blDatePickerService"/>
    </bean>

	<!--BL-110 Inventory Scan Tool-->
	<bean id="blInventoryScanToolDao" name="blInventoryScanToolDao"
		  class="com.bl.core.inventory.scan.dao.impl.DefaultBlInventoryScanToolDao"/>

	<bean id="blInventoryScanToolService" name="blInventoryScanToolService"
		  class="com.bl.core.inventory.scan.service.impl.DefaultBlInventoryScanToolService"/>
		  
	<!-- SOLR Field value Resolver for minSerialfinalSalePrice solr attribute -->		  
	<bean id="blSerialFinalSalePriceValueResolver" class="com.bl.core.search.solrfacetsearch.provider.impl.BlSerialFinalSalePriceValueResolver"
        parent="abstractValueResolver"/>
        
    <!-- SOLR Field value Resolver for minSerialIncentivizedPrice solr attribute -->
    <bean id="blSerialIncentivizedPriceValueResolver" class="com.bl.core.search.solrfacetsearch.provider.impl.BlSerialIncentivizedPriceValueResolver"
        parent="abstractValueResolver"/>

	<bean id="blDatePickerService" class="com.bl.core.datepicker.impl.DefaultBlDatePickerService">
		<property name="sessionService" ref="sessionService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>


	<!--Avalara Tax-->
	<alias name="defaultBlExternalTaxesService" alias="externalTaxesService"/>
	<bean id="defaultBlExternalTaxesService"
		class="com.bl.core.services.tax.DefaultBlExternalTaxesService" parent="defaultExternalTaxesService" />

 <!--BL-331 Solr Field Value Resolver -->

  <bean id="blUsedGearProductValueResolver" class="com.bl.core.resolvers.BlUsedGearProductValueResolver" parent="abstractValueResolver"/>

  <bean id="abstractBlCategoryCodeValueResolver" abstract="true" class="com.bl.core.resolvers.BlCategoryCodeValueResolver" parent="abstractValueResolver" >
    <property name="modelService" ref="modelService"/>
  </bean>

  <bean id="blBrandCategoryCodeValueResolver" parent="abstractBlCategoryCodeValueResolver">
    <property name="categorySource" ref="blBrandCategorySourceResolver"/>
  </bean>

  <bean id="blBrandCategorySourceResolver" parent="abstractCategorySource">
    <property name="rootCategory" value="brands"/>
  </bean>

  <bean id="blCategoryCodeValueResolver" parent="abstractBlCategoryCodeValueResolver">
    <property name="categorySource" ref="blCategorySource"/>
  </bean>

  <bean id="blCategorySource" parent="abstractCategorySource">
    <property name="rootCategory" value="brands"/>
  </bean>

  <bean id="blGlobalValueResolver" class="com.bl.core.resolvers.BlGlobalFacetValueResolver" parent="abstractValueResolver">
    <property name="modelService" ref="modelService"/>
  </bean>


  <bean id="blImageValueResolver" class="com.bl.core.resolvers.BlImageValueResolver" parent="abstractValueResolver" >
    <property name="mediaFormat" value="300Wx300H"/>
    <property name="mediaService" ref="mediaService" />
    <property name="defaultBlMediaContainerService" ref="defaultBlMediaContainerService" />
  </bean>

	<bean id="blUpComingProductValueResolver" class="com.bl.core.resolvers.BlUpComingProductValueResolver" parent="abstractValueResolver"/>

	<!-- BL-462 : Extened OOTB DefaultCalculationService to calculate the prices as per the rental dates and to calculates damage Waiver prices -->
	<alias name="defaultBlCalculationService" alias="calculationService"/>
	<bean id="defaultBlCalculationService" class="com.bl.core.order.impl.DefaultBlCalculationService" parent="defaultCalculationService">
		<property name="commercePriceService" ref="commercePriceService"/>
		<property name="blDamageWaiverGenericDao" ref="blDamageWaiverGenericDao"/>
		<property name="defaultOrderRequiresCalculationStrategy" ref="orderRequiresCalculationStrategy"/>
		<property name="defaultCommonI18NService" ref="commonI18NService"/>
		<property name="defaultBlExternalTaxesService" ref="externalTaxesService"/>
	</bean>
	
	<!-- BL-462 : Generic dao to get the full list of Damage Waiver Percantage defined for damage Waiver types -->
	<alias name="defaultBlDamageWaiverGenericDao" alias="blDamageWaiverGenericDao"/>
	<bean name="defaultBlDamageWaiverGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlDamageWaiverPricing"/>
	</bean>

	<!-- BL-553 - Stock creation -->
	<bean id="blStockCreationJob" class="com.bl.core.job.BlStockCreationJob" parent="abstractJobPerformable">
		<property name="blStockService" ref="blStockService"/>
	</bean>
	
	<bean id="blAutomatedStockCreationJob" class="com.bl.core.job.BlAutomatedStockCreationJob" parent="abstractJobPerformable">
		<property name="blStockService" ref="blStockService"/>
	</bean>
	
	<bean id="blStockService" class="com.bl.core.stock.impl.DefaultBlStockService">
		<property name="modelService" ref="modelService"/>
		<property name="productDao" ref="productDao"/>
		<property name="blStockLevelDao" ref="blStockLevelDao"/>
	</bean>
	
	<alias alias="productDao" name="defaultBlProductDao"/>
	<bean id="defaultBlProductDao" class="com.bl.core.product.dao.impl.DefaultBlProductDao" parent="defaultProductDao">
	</bean>

	<!--Shipping-->
	<alias alias="zoneDeliveryModeDao" name="blDeliveryModeDao"/>
	<bean id="blDeliveryModeDao" class="com.bl.core.shipping.dao.impl.DefaultBlDeliveryModeDao"/>

	<alias alias="zoneDeliveryModeService" name="blDeliveryModeService"/>
	<bean id="blDeliveryModeService" class="com.bl.core.shipping.service.impl.DefaultBlDeliveryModeService" parent="defaultZoneDeliveryModeService">
		<property name="blCommerceStockService" ref="blCommerceStockService"/>
		<property name="blCartService" ref="cartService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>

	<!--BL-461 - This is to override the OOB add to cart and show cart functionality.-->
	<alias name="blCommerceAddToCartStrategy" alias="commerceAddToCartStrategy"/>
	<bean id="blCommerceAddToCartStrategy"
		class="com.bl.core.services.strategy.impl.DefaultBlCommerceAddToCartStrategy"
		parent="defaultCommerceAddToCartStrategy">
	</bean>

	<alias name="blCommerceUpdateCartEntryStrategy" alias="commerceUpdateCartEntryStrategy"/>
	<bean id="blCommerceUpdateCartEntryStrategy"
		class="com.bl.core.services.strategy.impl.DefaultBlCommerceUpdateCartEntryStrategy"
		parent="defaultCommerceUpdateCartEntryStrategy">
		<property name="blDatePickerService" ref="blDatePickerService"/>
		<property name="blCommerceStockService" ref="blCommerceStockService"/>
	</bean>

	<alias name="defaultBlStateWarehouseMappingDao" alias="blStateWarehouseMappingDao"/>
	<bean id="defaultBlStateWarehouseMappingDao" class="com.bl.core.dao.warehouse.impl.DefaultBlStateWarehouseMappingDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!--BL-565 Gift Card Email Start -->
	<bean id="giftCardEmailEventListener" class="com.bl.core.event.BlGiftCardEmailEventListener"
		parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>

	<bean id="giftCardEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/blcore/processes/giftCardEmailProcess.xml" />
	</bean>

	<bean id="generateGiftCardEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="GiftCardEmailTemplate" />
	</bean>

	<!--BL-565 Gift Card Email End-->

	<!--Gift card Start-->
	<alias name="blGiftCardDaoImpl" alias="giftCardDao" />
	<bean id="blGiftCardDaoImpl" class="com.bl.core.services.dao.impl.DefaultBlGiftCardDao"/>

	<alias name="defaultGiftCardOrderMethodHook" alias="giftCardOrderMethodHook" />
	<bean id="defaultGiftCardOrderMethodHook"
		class="com.bl.core.order.hook.impl.BlGiftCardOrderMethodHook">
		<property name="eventService" ref="eventService" />
		<property name="modelService" ref="modelService" />
	</bean>

	<bean id="commerceGiftCardOrderMethodHookMergeDirective"
		depends-on="commercePlaceOrderMethodHooks" parent="listMergeDirective">
		<property name="add" ref="giftCardOrderMethodHook" />
	</bean>

	<alias name="blGiftCardServiceImpl" alias="giftCardService" />
	<bean id="blGiftCardServiceImpl"
		class="com.bl.core.services.gitfcard.impl.DefaultBlGiftCardService">
		<property name="giftCardDao" ref="giftCardDao" />
		<property name="blCartService" ref="cartService" />
		<property name="modelService" ref="modelService" />
		<property name="blCheckoutCartCalculationStrategy" ref="commerceCartCalculationStrategy" />
		<property name="commonI18NService" ref="commonI18NService" />
	</bean>

	<bean id="giftCardbalance" class="com.bl.core.attributes.BlGiftCardBalanceHandler" />

	<alias alias="commerceCartCalculationStrategy" name="defaultBlCheckoutCartCalculationStrategy" />
	<bean id="defaultBlCheckoutCartCalculationStrategy"
		class="com.bl.core.services.order.impl.DefaultBlCommerceCartCalculationStrategy"
		parent="defaultCommerceCartCalculationStrategy">
		<property name="giftCardService" ref="giftCardService" />
	</bean>
	<!--Gift card End-->

	<!-- Shipping Optimization-->
	<alias name="defaultBlShippingOptimizationStrategy" alias="blShippingOptimizationStrategy"/>
	<bean id="defaultBlShippingOptimizationStrategy"
		  class="com.bl.core.shipping.strategy.impl.DefaultBlShippingOptimizationStrategy"
		  parent="abstractBusinessService">
		<property name="zoneDeliveryModeService" ref="zoneDeliveryModeService"/>
		<property name="blDatePickerService" ref="blDatePickerService"/>
		<property name="blCommerceStockService" ref="blCommerceStockService"/>
	</bean>

	<bean id="blShippingOptimizationJob" class="com.bl.core.job.BlShippingOptimizationJob"
		  parent="abstractJobPerformable">
		<property name="zoneDeliveryModeService" ref="zoneDeliveryModeService"/>
		<property name="blShippingOptimizationStrategy" ref="blShippingOptimizationStrategy"/>
	</bean>
	<!-- Shipping Optimization End-->

</beans>
