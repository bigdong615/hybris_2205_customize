<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

     <context:annotation-config/>

	<!-- Spring Integration -->
	<import resource="classpath:/blcore/integration/hot-folder-store-electronics-spring.xml"/>
	<import resource="classpath:/blcore/integration/hot-folder-store-apparel-spring.xml"/>
	<import resource="classpath:/blcore/integration/hot-folder-common-spring.xml"/>

	<!-- SystemSetup for the BlCore -->
	<bean id="acceleratorCoreSystemSetup" class="com.bl.core.setup.CoreSystemSetup"
	       parent="abstractCoreSystemSetup"/>

	<bean id="blBrandCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="blBrandCategorySourceResolver"/>
	</bean>

	<bean id="blCategoryNameValueProvider" parent="abstractCategoryNameValueProvider">
		<property name="categorySource" ref="blBrandCategorySourceResolver"/>
	</bean>

	<bean id="abstractCategoryCodeValueProvider" abstract="true"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>
	<bean id="abstractCategoryNameValueProvider" abstract="true"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryNameValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="image515ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="515Wx515H"/>
	</bean>
	<bean id="image300ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="300Wx300H"/>
	</bean>
	<bean id="image96ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="96Wx96H"/>
	</bean>
	<bean id="image65ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="65Wx65H"/>
	</bean>
	<bean id="image30ValueProvider" parent="abstractImageValueProvider" >
		<property name="mediaFormat" value="30Wx30H"/>
	</bean>

	<bean id="productUrlValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.ProductUrlValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="urlResolver" ref="productModelUrlResolver"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="i18nService" ref="i18nService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
	</bean>

	<bean id="promotionCodeValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PromotionCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>

	<bean id="promotionImageValueProvider"
	      class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PrimaryPromotionImageValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="promotionsService" ref="promotionsService"/>
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>


	<!--
		Event listeners are singletons, therefore the dependency for a bean in tenant-scope
		must be configured with a lookup method.
	-->
	<bean id="orderCancelledEventListener"
	      class="com.bl.core.event.OrderCancelledEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderRefundEventListener"
	      class="com.bl.core.event.OrderRefundEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="customerRegistrationEventListener"
	      class="com.bl.core.event.RegistrationEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="forgottenPasswordEventListener"
	      class="com.bl.core.event.ForgottenPasswordEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="commonI18NService" ref="commonI18NService" />
		<property name="baseSiteService" ref="baseSiteService" />
	</bean>
	<bean id="submitOrderEventListener" class="com.bl.core.event.SubmitOrderEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="modelService" ref="modelService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>
	<bean id="orderConfirmationEventListener"
	      class="com.bl.core.event.OrderConfirmationEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendDeliveryMessageEventListener"
	      class="com.bl.core.event.SendDeliveryMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendReadyForPickupMessageEventListener"
	      class="com.bl.core.event.SendReadyForPickupMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledMessageEventListener"
	      class="com.bl.core.event.SendOrderPartiallyCanceledMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedMessageEventListener"
	      class="com.bl.core.event.SendOrderPartiallyRefundedMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledMessageEventListener"
	      class="com.bl.core.event.SendNotPickedUpConsignmentCanceledMessageEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderCompletedEventListener" class="com.bl.core.event.OrderCompletedEventListener" parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<!-- Process resources definition -->

	<bean id="customerRegistrationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/customerRegistrationEmailProcess.xml"/>
	</bean>
	<bean id="forgottenPasswordEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/forgottenPasswordEmailProcess.xml"/>
	</bean>
	<bean id="orderConfirmationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/orderConfirmationEmailProcess.xml"/>
	</bean>
	<bean id="sendDeliveryEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendDeliveryEmailProcess.xml"/>
	</bean>
	<bean id="sendReadyForPickupEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendReadyForPickupEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderCancelledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderCancelledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderRefundEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderRefundEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderPartiallyCanceledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendOrderPartiallyRefundedEmailProcess.xml"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/sendNotPickedUpConsignmentCanceledEmailProcess.xml"/>
	</bean>

	<!-- Actions -->
	<bean id="abstractAction" class="de.hybris.platform.processengine.action.AbstractAction"
	      abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="processParameterHelper" ref="processParameterHelper"/>
	</bean>

	<bean id="sendEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.SendEmailAction"
	       parent="abstractAction">
		<property name="emailService" ref="emailService"/>
	</bean>

	<bean id="abstractGenerateEmailAction" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction"
	      parent="abstractAction" abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="emailGenerationService" ref="emailGenerationService"/>
	</bean>

	<bean id="generateCustomerRegistrationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="CustomerRegistrationEmailTemplate"/>
	</bean>

	<bean id="generateForgottenPasswordEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="BlForgottenPasswordEmailTemplate"/>
	</bean>

	<bean id="generateOrderConfirmationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderConfirmationEmailTemplate"/>
	</bean>

	<bean id="generateDeliverySentEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="DeliverySentEmailTemplate"/>
	</bean>

	<bean id="generateReadyForPickupEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ReadyForPickupEmailTemplate"/>
	</bean>

	<bean id="generateOrderCancelledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderCancelledEmailTemplate"/>
	</bean>

	<bean id="generateOrderRefundEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderRefundEmailTemplate"/>
	</bean>

	<bean id="generateOrderPartiallyCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyCanceledEmailTemplate"/>
	</bean>
	<bean id="generateOrderPartiallyRefundedEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyRefundedEmailTemplate"/>
	</bean>
	<bean id="generateNotPickedUpConsignmentCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="NotPickedUpConsignmentCanceledEmailTemplate"/>
	</bean>

	<bean id="removeSentEmail"
	      class="de.hybris.platform.acceleratorservices.process.email.actions.RemoveSentEmailAction"
	      parent="abstractAction">
		<property name="modelService" ref="modelService"/>
	</bean>

    <bean id="markQuoteNotificationAsSent"
          class="com.bl.core.actions.quote.MarkQuoteNotificationAsSentAction"
          parent="abstractAction" abstract="true">
        <property name="quoteService" ref="quoteService"/>
    </bean>

	<!-- Simple Suggestion Service -->
	<alias alias="simpleSuggestionService" name="defaultSimpleSuggestionService"/>
	<bean id="defaultSimpleSuggestionService"
	      class="com.bl.core.suggestion.impl.DefaultSimpleSuggestionService" >
		<property name="simpleSuggestionDao" ref="simpleSuggestionDao"/>
	</bean>
	<alias alias="simpleSuggestionDao" name="defaultSimpleSuggestionDao"/>
	<bean id="defaultSimpleSuggestionDao"
	      class="com.bl.core.suggestion.dao.impl.DefaultSimpleSuggestionDao"
	      parent="abstractItemDao" >
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!-- Sales quote process actions -->

	<!-- quote-->
	<bean id="quoteBuyerSubmitEventListener" class="com.bl.core.event.QuoteBuyerSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteSalesRepSubmitEventListener" class="com.bl.core.event.QuoteSalesRepSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteSellerApprovalSubmitEventListener" class="com.bl.core.event.QuoteSellerApprovalSubmitEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteBuyerOrderPlacedEventListener" class="com.bl.core.event.QuoteBuyerOrderPlacedEventListener"
		  parent="abstractEventListener">
		<property name="commerceQuoteService" ref="commerceQuoteService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<bean id="quoteToExpireSoonEventListener" class="com.bl.core.event.QuoteToExpireSoonEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<bean id="quoteExpiredEventListener" class="com.bl.core.event.QuoteExpiredEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteCancelEventListener" class="com.bl.core.event.QuoteCancelEventListener"
		  parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<bean id="quoteBuyerProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-buyer-process.xml"/>
	</bean>

	<bean id="quoteSalesRepProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-salesrep-process.xml"/>
	</bean>


	<bean id="quoteSellerApprovalProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-seller-approval-process.xml"/>
	</bean>
	
	<bean id="quotePostCancellationProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-post-cancellation-process.xml"/>
	</bean>

	<bean id="quoteToExpireSoonProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-to-expire-soon-email-process.xml"/>
	</bean>
	
	<bean id="quoteExpiredProcessDefinitionResource"
		  class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/blcore/processes/quote/quote-expired-email-process.xml"/>
	</bean>

	<!-- Quotes email notification jobs -->
	<bean id="quoteToExpireSoonJobPerformable"
		  class="com.bl.core.job.QuoteToExpireSoonJobPerformable"
		  parent="abstractJobPerformable">
		<property name="supportedQuoteStatuses">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</property>
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="eventService" ref="eventService" />
		<property name="configurationService" ref="configurationService" />
		<property name="timeService" ref="timeService" />
	</bean>
	
	<bean id="quoteExpiredJobPerformable"
		  class="com.bl.core.job.QuoteExpiredJobPerformable"
		  parent="abstractJobPerformable">
		<property name="supportedQuoteStatuses">
			<set value-type="de.hybris.platform.core.enums.QuoteState">
				<value>BUYER_OFFER</value>
			</set>
		</property>
		<property name="commerceQuoteDao" ref="commerceQuoteDao"/>
		<property name="eventService" ref="eventService" />
		<property name="timeService" ref="timeService" />
	</bean>

	<import resource="/blcore/processes/quote/quote-buyer-process-spring.xml"/>
	<import resource="/blcore/processes/quote/quote-salesrep-process-spring.xml"/>
	<import resource="/blcore/processes/quote/quote-seller-approval-process-spring.xml"/>
	
	<import resource="/blcore/processes/quote/quote-to-expire-soon-email-process-spring.xml"/>
	<import resource="/blcore/processes/quote/quote-expired-email-process-spring.xml"/>

	<import resource="/blcore/processes/quote/quote-post-cancellation-process-spring.xml"/>
	
	<!-- Customer cleanup -->
	<alias name="defaultCustomerCleanupRelatedObjectsAction" alias="customerCleanupRelatedObjectsAction"/>
	<bean id="defaultCustomerCleanupRelatedObjectsAction" class="com.bl.core.retention.impl.DefaultCustomerCleanupRelatedObjectsAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="customerCleanupHooks"/>
	</bean>
	
	<!-- Cleanup the customers not owning any order currently and the current date has past deactivation date+retention date. Also removes customers audit records. -->
	<alias name="defaultCustomerNotOwningOrdersRemoveCleanupAction" alias="customerNotOwningOrdersRemoveCleanupAction"/>
	<bean id="defaultCustomerNotOwningOrdersRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="customerCleanupHooks"/>
	</bean>
	
	<!-- Order cleanup -->
	<!-- Cleanup the order related objects and then remove order and its audit records. -->
	<alias name="defaultOrderRemoveCleanupAction" alias="orderRemoveCleanupAction"/>
	<bean id="defaultOrderRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="orderCleanupHooks"/>
	</bean>

	<!-- CsTicket Remove action -->
	<alias name="defaultCSTicketRemoveCleanupAction" alias="csTicketRemoveCleanupAction"/>
	<bean id="defaultCSTicketRemoveCleanupAction" class="de.hybris.platform.retention.impl.DefaultExtensibleRemoveCleanupAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="csTicketCleanupHooks"/>
	</bean>

	<!-- CsTicket Stagnation action -->
	<alias name="defaultCSTicketStagnationAction" alias="csTicketStagnationAction"/>
	<bean id="defaultCSTicketStagnationAction" class="com.bl.core.retention.impl.DefaultCSTicketStagnationAction" parent="abstractExtensibleRemoveCleanupAction">
		<property name="itemCleanupHooks" ref="csTicketRetentionHooks"/>
		<property name="ticketBusinessService" ref="ticketBusinessService"/>
	</bean>
	
	<!-- Impex Import Services to be used while system initialization or update process -->
	<!-- BlCoreDataImportService class is used to import common data, product catalog, content catalog, store 
    	from coredata while performing system initialization or update process. -->
	<alias name="blCoreDataImportService" alias="coreDataImportService"/>
    <bean id="blCoreDataImportService" class="com.bl.core.dataimport.BlCoreDataImportService" parent="defaultCoreDataImportService"/>
    
    <!-- BlSampleDataImportService class is used to import common data, product catalog, content catalog, store 
    	from sampledata while performing system initialization or update process. -->
    <alias name="blSampleDataImportService" alias="sampleDataImportService"/>
    <bean id="blSampleDataImportService" class="com.bl.core.dataimport.BlSampleDataImportService" parent="defaultSampleDataImportService"/>

	<!-- feature/custom_extensions_blcustomersupportbackoffice_blwarehousingbackoffice : DefaultBlStandardPricingRatioDao class is used to get the defined Price ratios-->

	<alias name="defaultBLStandardPricingRatioDao" alias="blStandardPricingRatioDao"/>
	<bean id="defaultBLStandardPricingRatioDao" class="com.bl.core.dao.impl.DefaultBlStandardPricingRatioDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>


	<!-- feature/custom_extensions_blcustomersupportbackoffice_blwarehousingbackoffice : DefaultBlBackOfficePriceService is used to handle price based on selected product in customersupport cockpit -->

	<alias name="defaultBLBackOfficePriceService" alias="blBackOfficePriceService"/>
	<bean id="defaultBLBackOfficePriceService" class="com.bl.core.service.impl.DefaultBlBackOfficePriceService">
		<property name="blCustomProductDynamicPriceStrategy" ref="blCustomProductDynamicPriceStrategy"/>
		<property name="blProductPriceRatioUtil" ref="blProductPriceRatioUtil"/>
	</bean>


	<!-- feature/custom_extensions_blcustomersupportbackoffice_blwarehousingbackoffice : BlDefaultProductDynamicPriceStrategy is used to get the dynamic rental price for product -->

	<alias name="defaultBLCustomProductDynamicPriceStrategy" alias="blCustomProductDynamicPriceStrategy"/>
	<bean id="defaultBLCustomProductDynamicPriceStrategy" class="com.bl.core.strategies.impl.BlDefaultProductDynamicPriceStrategy">
	</bean>

	<!-- feature/custom_extensions_blcustomersupportbackoffice_blwarehousingbackoffice : BlPriceRatioUtil class used to calculate rental price based on price-ratio and no of days-->

	<alias name="defaultBLProductPriceRatioUtil" alias="blProductPriceRatioUtil"/>
	<bean id="defaultBLProductPriceRatioUtil" class="com.bl.core.util.BlPriceRatioUtil">
		<property name="blStandardPricingRatioDao" ref="blStandardPricingRatioDao"/>
		<property name="enumerationService" ref="enumerationService"/>
	</bean>


 <!-- feature/custom_extensions_blcustomersupportbackoffice_blwarehousingbackoffice : BlDefaultAbstractOrderDatePopulatePrepareInterceptor
	class used to update rentalstartdate and rentalreturndate on respective orderentries-->

	<alias name="defaultAbstractOrderDatePopulatePrepareInterceptor" alias="blAbstractOrderDatePopulatePrepareInterceptor"/>
	<bean id="defaultAbstractOrderDatePopulatePrepareInterceptor"
		class="com.bl.core.interceptor.BlDefaultAbstractOrderDatePopulatePrepareInterceptor">
		<property name="blBackOfficePriceService" ref="blBackOfficePriceService"/>
	</bean>

	<!-- feature/custom_extensions_blcustomersupportbackoffice_blwarehousingbackoffice : BlDefaultAbstractOrderDatePopulatePrepareInterceptor mapping
	 interceptor:blAbstractOrderDatePopulatePrepareInterceptor and type:AbstractOrder-->

	<bean id="abstractOrderDatePopulatePrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="blAbstractOrderDatePopulatePrepareInterceptor"/>
		<property name="typeCode" value="AbstractOrder"/>
	</bean>
	<!-- BL-90 Category Modeling Related changes in Category Prepare Interceptor to generate CategoryId-->
	<alias name="blCategoryPrepareInterceptor" alias="blCategoryPrepareInterceptor"/>
	<bean id="blCategoryPrepareInterceptor" class="com.bl.core.model.interceptor.BlCategoryPrepareInterceptor">
		<property name="keyGenerator" ref="categoryIdGenerator"/>
	</bean>

	<bean id="blCategoryInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blCategoryPrepareInterceptor"/>
		<property name="typeCode" value="Category"/>
	</bean>
	<!-- category Id generator-->
	<bean id="categoryIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.category.id.name}"/>
		<property name="digits" value="${keygen.category.id.digits}"/>
		<property name="start" value="${keygen.category.id.start}"/>
		<property name="type" value="${keygen.category.id.type}"/>
		<property name="template" value="${keygen.category.id.template}"/>
	</bean>

	<!-- BL-91 Product Modeling Related changes in Product Prepare Interceptor for the ProductId Code Generation-->
	<alias name="blProductPrepareInterceptor" alias="blProductPrepareInterceptor"/>
	<bean id="blProductPrepareInterceptor"	class="com.bl.core.model.interceptor.BlProductPrepareInterceptor">
		<property name="keyGenerator" ref="productIdGenerator"/>
		<property name="enumerationService" ref="enumerationService"/>
		<property name="blPricingService" ref="blPricingService"/>
		<property name="catalogVersionService" ref="catalogVersionService"/>
	</bean>

	<bean id="blProductPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blProductPrepareInterceptor"/>
		<property name="typeCode" value="BlProduct"/>
	</bean>

	<!-- product Id generator-->
	<bean id="productIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.product.id.name}"/>
		<property name="digits" value="${keygen.product.id.digits}"/>
		<property name="start" value="${keygen.product.id.start}"/>
		<property name="type" value="${keygen.product.id.type}"/>
		<property name="template" value="${keygen.product.id.template}"/>
	</bean>

	<!--BL-30 : This is created to override register method and disable registration email. -->
	<alias name="defaultBlCustomerAccountService" alias="customerAccountService"/>
	<bean id="defaultBlCustomerAccountService" class="com.bl.core.services.customer.impl.DefaultBlCustomerAccountService" parent="defaultCustomerAccountService"/>


	<!--This is created for override OOB classes to get the media to be indexed to solr -->

	<bean id="defaultBlMediaDao" class="com.bl.core.media.dao.impl.DefaultBlMediaDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<bean  id="defaultBlMediaService" class="com.bl.core.media.impl.DefaultBlMediaService">
		<property name="defaultBlMediaDao" ref="defaultBlMediaDao"/>
	</bean>

	<bean id="defaultBlMediaContainerService" class="com.bl.core.media.impl.DefaultBlMediaContainerService">
		<property name="defaultBlMediaService" ref="defaultBlMediaService"/>
	</bean>


	<!-- BL-110-v2 BLInventoryLocation item Prepare Interceptor to generate inventoryLocationID-->
	<alias name="blInventoryLocationPrepareInterceptor" alias="blInventoryLocationPrepareInterceptor"/>
	<bean id="blInventoryLocationPrepareInterceptor" class="com.bl.core.model.interceptor.BlInventoryLocationPrepareInterceptor">
		<property name="keyGenerator" ref="inventoryLocationIdGenerator"/>
	</bean>

	<bean id="blInventoryLocationPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blInventoryLocationPrepareInterceptor"/>
		<property name="typeCode" value="BLInventoryLocation"/>
	</bean>

	<!-- InventoryLocation Id generator-->
	<bean id="inventoryLocationIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.inventoryLocation.id.name}"/>
		<property name="digits" value="${keygen.inventoryLocation.id.digits}"/>
		<property name="start" value="${keygen.inventoryLocation.id.start}"/>
		<property name="type" value="${keygen.inventoryLocation.id.type}"/>
		<property name="template" value="${keygen.inventoryLocation.id.template}"/>
	</bean>

	<!--BL-91 Adding attribute handler classes for dynamic attributes-->
	<bean id="serialProductNotInServiceHandler" class="com.bl.core.model.handler.SerialProductNotInServiceHandler"/>

	<bean id="serialProductTotalRepairsHandler" class="com.bl.core.model.handler.SerialProductTotalRepairsHandler"/>
	<bean id="serialProductTotalTransitDaysHandler" class="com.bl.core.model.handler.SerialProductTotalTransitDaysHandler"/>


	<!--BL-166 : This bean is override to change default product pattern-->
	<alias name="defaultProductModelUrlResolver" alias="productModelUrlResolver"/>
	<bean id="defaultProductModelUrlResolver"
		class="de.hybris.platform.commerceservices.url.impl.DefaultProductModelUrlResolver">
		<property name="threadContextService" ref="threadContextService"/>
		<property name="commerceCategoryService" ref="commerceCategoryService"/>
		<property name="baseSiteService" ref="baseSiteService"/>
		<property name="defaultPattern" value="/product/{product-code}"/>
		<property name="productAndCategoryHelper" ref="productAndCategoryHelper"/>
	</bean>

	<!--<BL-467 bean entry is for clear cart>-->
	<alias name="defaultBlCartService" alias="cartService" />
	<bean id="defaultBlCartService" class="com.bl.core.services.cart.impl.DefaultBlCartService" parent="defaultCartService">
		<property name="commerceCartService" ref="commerceCartService" />
		<property name="blCommerceStockService" ref="blCommerceStockService" />
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="blDatePickerService" ref="blDatePickerService" />
		<property name="blCheckoutCartCalculationStrategy" ref="commerceCartCalculationStrategy" />
		<property name="catalogVersionDao" ref="catalogVersionDao" />
		<property name="productDao" ref="productDao" />
		<property name="searchRestrictionService" ref="searchRestrictionService" />
		<property name="blBlackoutDatesDao" ref="blBlackoutDatesDao"/>
		<property name="productService" ref="productService"/>
		<property name="promotionDao" ref="promotionDao"/>
		<property name="promotionsService" ref="promotionsService"/>
	</bean>

	<!--<BL-500 bean entry is for order service>-->
	<alias name="defaultBlOrderService" alias="blOrderService" />
	<bean id="defaultBlOrderService" class="com.bl.core.services.order.impl.DefaultBlOrderService">
		<property name="productService" ref="productService"/>
		<property name="modelService" ref="modelService"/>
		<property name="blRepairLogDao" ref="blRepairLogDao" />
		<property name="blEspEventService" ref="blEspEventService"/>
	</bean>

	<!--Pricing Logic changes-->
	<alias name="defaultBlPricingService" alias="blPricingService"/>
	<bean id="defaultBlPricingService" class="com.bl.core.services.calculation.impl.DefaultBlPricingService">
		<property name="blPricingGenericDao" ref="blPricingGenericDao"/>
		<property name="priceRowGenericDao" ref="priceRowGenericDao"/>
		<property name="modelService" ref="modelService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="enumerationService" ref="enumerationService"/>
		<property name="unitService" ref="unitService"/>
	</bean>

	<alias name="defaultBlPricingGenericDao" alias="blPricingGenericDao"/>
	<bean name="defaultBlPricingGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlPricingLogic"/>
	</bean>
	<!--BL-849 : Allocation - Optimize Item Return Warehouse -->
	<alias name="defaultBlWarehouseGenericDao" alias="blWarehouseGenericDao"/>
	<bean name="defaultBlWarehouseGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="Warehouse"/>
	</bean>
	<alias name="defaultPriceRowGenericDao" alias="priceRowGenericDao"/>
	<bean name="defaultPriceRowGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="PriceRow"/>
	</bean>
	<alias name="defaultBlStandardRatioGenericDao" alias="blStandardRatioGenericDao"/>
	<bean name="defaultBlStandardRatioGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlStandardPricingRatio"/>
	</bean>
	<alias name="defaultBlConstrainedRatioGenericDao" alias="blConstrainedRatioGenericDao"/>
	<bean name="defaultBlConstrainedRatioGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlConstrainedPricingRatio"/>
	</bean>
	<alias name="defaultBlPricingRatioService" alias="blPricingRatioService"/>
	<bean id="defaultBlPricingRatioService" class="com.bl.core.services.pricingratio.impl.DefaultBlPricingRatioService">
	<property name="blConstrainedRatioGenericDao" ref="blConstrainedRatioGenericDao"/>
	<property name="blStandardRatioGenericDao" ref="blStandardRatioGenericDao"/>
	</bean>

	<alias name="blSerialProductPrepareInterceptor" alias="blSerialProductPrepareInterceptor"/>
	<bean id="blSerialProductPrepareInterceptor" class="com.bl.core.model.interceptor.BlSerialProductPrepareInterceptor">
		<property name="blPricingService" ref="blPricingService"/>
		<property name="blStockService" ref="blStockService"/>
		<property name="blRepairLogService" ref="blRepairLogService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="blBufferInventoryService" ref="blBufferInventoryService"/>
		<property name="blConsignmentEntryService" ref="blConsignmentEntryService"/>
		<property name="blOrderService" ref="blOrderService"/>
		<property name="blProductService" ref="productService"/>
	</bean>

	<bean id="blSerialProductPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blSerialProductPrepareInterceptor"/>
		<property name="typeCode" value="BlSerialProduct"/>
	</bean>

	<!--Bl-57 new stock related service and dao classes added-->
	<alias alias="blStockLevelDao" name="defaultBlStockLevelDao"/>
	<bean id="defaultBlStockLevelDao" class="com.bl.core.stock.impl.DefaultBlStockLevelDao" parent="stockLevelDao">
	</bean>
	
	<bean id="blCommerceStockService" class="com.bl.core.stock.impl.DefaultBlCommerceStockService">
		<property name="blStockLevelDao" ref="blStockLevelDao"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="blDatePickerService" ref="blDatePickerService" />
	</bean>
	
	<!-- BL-73 Created bean for discontinued product -->	
	<bean id="blRentalGearDiscontinuedProductValueProvider" class="com.bl.core.search.solrfacetsearch.provider.impl.BlRentalGearDiscontinuedProductValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
	</bean>
	
	<!-- BL-483 BL Pricing Strategy file to calculate Dynamic Price -->
	<alias name="defaultBlProductDynamicPriceStrategy" alias="blProductDynamicPriceStrategy"/>
	<bean id="defaultBlProductDynamicPriceStrategy" class="com.bl.core.price.strategies.impl.DefaultBlProductDynamicPriceStrategy">
		<property name="blPricingRatioService" ref="blPricingRatioService"/>
	</bean>
	
	<!-- BL-483 Extended OOTB Commerce Price Service to get Dynamic Pricing for Rental Products on the basis of seleted Rental Days -->
	<alias alias="commercePriceService" name="defaultBlCommercePriceService"/>
    <bean id="defaultBlCommercePriceService" class="com.bl.core.price.service.impl.DefaultBlCommercePriceService" parent="defaultCommercePriceService">
        <property name="blProductDynamicPriceStrategy" ref="blProductDynamicPriceStrategy"/>
        <property name="blDatePickerService" ref="blDatePickerService"/>
        <property name="baseStoreService" ref="baseStoreService"/>
    </bean>

	<!--BL-110 Inventory Scan Tool-->
	<bean id="blInventoryScanToolDao" name="blInventoryScanToolDao"
		  class="com.bl.core.inventory.scan.dao.impl.DefaultBlInventoryScanToolDao"/>

	<bean id="blInventoryScanToolService" name="blInventoryScanToolService"
		  class="com.bl.core.inventory.scan.service.impl.DefaultBlInventoryScanToolService"/>
		  
	<!-- SOLR Field value Resolver for minSerialfinalSalePrice solr attribute -->		  
	<bean id="blSerialFinalSalePriceValueResolver" class="com.bl.core.search.solrfacetsearch.provider.impl.BlSerialFinalSalePriceValueResolver"
        parent="abstractValueResolver"/>
        
    <!-- SOLR Field value Resolver for minSerialIncentivizedPrice solr attribute -->
    <bean id="blSerialIncentivizedPriceValueResolver" class="com.bl.core.search.solrfacetsearch.provider.impl.BlSerialIncentivizedPriceValueResolver"
        parent="abstractValueResolver"/>

	<bean id="blDatePickerService" class="com.bl.core.datepicker.impl.DefaultBlDatePickerService">
		<property name="sessionService" ref="sessionService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="blBlackoutDatesDao" ref="blBlackoutDatesDao"/>
	</bean>


	<!--Avalara Tax-->
	<alias name="defaultBlExternalTaxesService" alias="externalTaxesService"/>
	<bean id="defaultBlExternalTaxesService"
		class="com.bl.core.services.tax.DefaultBlExternalTaxesService" parent="defaultExternalTaxesService" />

 <!--BL-331 Solr Field Value Resolver -->

  <bean id="blUsedGearProductValueResolver" class="com.bl.core.resolvers.BlUsedGearProductValueResolver" parent="abstractValueResolver"/>

  <bean id="abstractBlCategoryCodeValueResolver" abstract="true" class="com.bl.core.resolvers.BlCategoryCodeValueResolver" parent="abstractValueResolver" >
    <property name="modelService" ref="modelService"/>
  </bean>

  <bean id="blBrandCategoryCodeValueResolver" parent="abstractBlCategoryCodeValueResolver">
    <property name="categorySource" ref="blBrandCategorySourceResolver"/>
  </bean>

  <bean id="blBrandCategorySourceResolver" parent="abstractCategorySource">
    <property name="rootCategory" value="brands"/>
  </bean>

  <bean id="blCategoryCodeValueResolver" parent="abstractBlCategoryCodeValueResolver">
    <property name="categorySource" ref="blCategorySource"/>
  </bean>

  <bean id="blCategorySource" parent="abstractCategorySource">
    <property name="rootCategory" value="rentalgear"/>
  </bean>

  <bean id="blGlobalValueResolver" class="com.bl.core.resolvers.BlGlobalFacetValueResolver" parent="abstractValueResolver">
    <property name="modelService" ref="modelService"/>
  </bean>


  <bean id="blImageValueResolver" class="com.bl.core.resolvers.BlImageValueResolver" parent="abstractValueResolver" >
    <property name="mediaFormat" value="300Wx300H"/>
    <property name="mediaService" ref="mediaService" />
    <property name="defaultBlMediaContainerService" ref="defaultBlMediaContainerService" />
  </bean>

	<bean id="blUpComingProductValueResolver" class="com.bl.core.resolvers.BlUpComingProductValueResolver" parent="abstractValueResolver"/>

	<!-- BL-462 : Extened OOTB DefaultCalculationService to calculate the prices as per the rental dates and to calculates damage Waiver prices -->
	<alias name="defaultBlCalculationService" alias="calculationService"/>
	<bean id="defaultBlCalculationService" class="com.bl.core.order.impl.DefaultBlCalculationService" parent="defaultCalculationService">
		<property name="commercePriceService" ref="commercePriceService"/>
		<property name="blDamageWaiverGenericDao" ref="blDamageWaiverGenericDao"/>
		<property name="defaultOrderRequiresCalculationStrategy" ref="orderRequiresCalculationStrategy"/>
		<property name="defaultCommonI18NService" ref="commonI18NService"/>
		<property name="defaultBlExternalTaxesService" ref="externalTaxesService"/>
	</bean>
	
	<!-- BL-462 : Generic dao to get the full list of Damage Waiver Percantage defined for damage Waiver types -->
	<alias name="defaultBlDamageWaiverGenericDao" alias="blDamageWaiverGenericDao"/>
	<bean name="defaultBlDamageWaiverGenericDao"
		class="de.hybris.platform.servicelayer.internal.dao.DefaultGenericDao">
		<constructor-arg value="BlDamageWaiverPricing"/>
	</bean>

	<!-- BL-553 - Stock creation -->
	<bean id="blStockCreationJob" class="com.bl.core.job.BlStockCreationJob" parent="abstractJobPerformable">
		<property name="blStockService" ref="blStockService"/>
	</bean>
	
	<bean id="blAutomatedStockCreationJob" class="com.bl.core.job.BlAutomatedStockCreationJob" parent="abstractJobPerformable">
		<property name="blStockService" ref="blStockService"/>
	</bean>
	
	<bean id="blStockService" class="com.bl.core.stock.impl.DefaultBlStockService">
		<property name="modelService" ref="modelService"/>
		<property name="productDao" ref="productDao"/>
		<property name="blStockLevelDao" ref="blStockLevelDao"/>
	</bean>
	
	<alias alias="productDao" name="defaultBlProductDao"/>
	<bean id="defaultBlProductDao" class="com.bl.core.product.dao.impl.DefaultBlProductDao" parent="defaultProductDao">
	</bean>

	<!--Shipping-->
	<alias alias="zoneDeliveryModeDao" name="blDeliveryModeDao"/>
	<bean id="blDeliveryModeDao" class="com.bl.core.shipping.dao.impl.DefaultBlDeliveryModeDao"/>

	<alias alias="zoneDeliveryModeService" name="blDeliveryModeService"/>
	<bean id="blDeliveryModeService" class="com.bl.core.shipping.service.impl.DefaultBlDeliveryModeService" parent="defaultZoneDeliveryModeService">
		<property name="blCommerceStockService" ref="blCommerceStockService"/>
		<property name="blCartService" ref="cartService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="blBlackoutDatesDao" ref="blBlackoutDatesDao"/>
		<property name="blDatePickerService" ref="blDatePickerService"/>
		<property name="productService" ref="productService"/>
	</bean>

	<!--BL-461 - This is to override the OOB add to cart and show cart functionality.-->
	<alias name="blCommerceAddToCartStrategy" alias="commerceAddToCartStrategy"/>
	<bean id="blCommerceAddToCartStrategy"
		class="com.bl.core.services.strategy.impl.DefaultBlCommerceAddToCartStrategy"
		parent="defaultCommerceAddToCartStrategy">
	</bean>

	<alias name="blCommerceUpdateCartEntryStrategy" alias="commerceUpdateCartEntryStrategy"/>
	<bean id="blCommerceUpdateCartEntryStrategy"
		class="com.bl.core.services.strategy.impl.DefaultBlCommerceUpdateCartEntryStrategy"
		parent="defaultCommerceUpdateCartEntryStrategy">
		<property name="blDatePickerService" ref="blDatePickerService"/>
		<property name="blCommerceStockService" ref="blCommerceStockService"/>
	</bean>

	<alias name="blCommerceDeliveryModeStrategy" alias="commerceDeliveryModeStrategy"/>
	<bean id="blCommerceDeliveryModeStrategy"
		class="com.bl.core.services.strategy.impl.DefaultBlCommerceDeliveryModeStrategy"
		parent="defaultCommerceDeliveryModeStrategy">
		<property name="blDatePickerService" ref="blDatePickerService"/>
	</bean>

	<alias name="defaultBlStateWarehouseMappingDao" alias="blStateWarehouseMappingDao"/>
	<bean id="defaultBlStateWarehouseMappingDao" class="com.bl.core.dao.warehouse.impl.DefaultBlStateWarehouseMappingDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!--BL-565 Gift Card Email Start -->
	<bean id="giftCardEmailEventListener" class="com.bl.core.event.BlGiftCardEmailEventListener"
		parent="abstractAcceleratorSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>

	<bean id="giftCardEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/blcore/processes/giftCardEmailProcess.xml" />
	</bean>

	<bean id="generateGiftCardEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="GiftCardEmailTemplate" />
	</bean>

	<!--BL-565 Gift Card Email End-->

	<!--Gift card Start-->
	<alias name="blGiftCardDaoImpl" alias="giftCardDao" />
	<bean id="blGiftCardDaoImpl" class="com.bl.core.services.dao.impl.DefaultBlGiftCardDao"/>

	<alias name="defaultGiftCardOrderMethodHook" alias="giftCardOrderMethodHook" />
	<bean id="defaultGiftCardOrderMethodHook"
		class="com.bl.core.order.hook.impl.BlGiftCardOrderMethodHook">
		<property name="eventService" ref="eventService" />
		<property name="modelService" ref="modelService" />
		<property name="defaultBlESPEventService" ref="blEspEventService" />
	</bean>

	<bean id="commerceGiftCardOrderMethodHookMergeDirective"
		depends-on="commercePlaceOrderMethodHooks" parent="listMergeDirective">
		<property name="add" ref="giftCardOrderMethodHook" />
	</bean>

	<alias name="blGiftCardServiceImpl" alias="giftCardService" />
	<bean id="blGiftCardServiceImpl"
		class="com.bl.core.services.gitfcard.impl.DefaultBlGiftCardService">
		<property name="giftCardDao" ref="giftCardDao" />
		<property name="blCartService" ref="cartService" />
		<property name="modelService" ref="modelService" />
		<property name="blCheckoutCartCalculationStrategy" ref="commerceCartCalculationStrategy" />
		<property name="commonI18NService" ref="commonI18NService" />
	</bean>

	<bean id="giftCardbalance" class="com.bl.core.attributes.BlGiftCardBalanceHandler" />

	<alias alias="commerceCartCalculationStrategy" name="defaultBlCheckoutCartCalculationStrategy" />
	<bean id="defaultBlCheckoutCartCalculationStrategy"
		class="com.bl.core.services.order.impl.DefaultBlCommerceCartCalculationStrategy"
		parent="defaultCommerceCartCalculationStrategy">
		<property name="giftCardService" ref="giftCardService" />
		<property name="modelService" ref="modelService" />
	</bean>
	<!--Gift card End-->
	
	<!-- BL-628: Notify me start -->
	<bean id="generateProductNotifyMeEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ProductNotifyMeEmailTemplate" />
	</bean>

	<bean id="productNotifyMeEmailProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource" value="classpath:/blcore/processes/productNotifyMeEmailProcess.xml" />
	</bean>

	<alias name="blBackInStockNotificationJob" alias="stockLevelStatusJob" />
	<bean id="blBackInStockNotificationJob" class="com.bl.core.job.BlBackInStockNotificationJob" parent="defaultStockLevelStatusJob">
	</bean>
	<!-- Notify me end -->

	<!-- Shipping Optimization-->
	<alias name="defaultBlShippingOptimizationStrategy" alias="blShippingOptimizationStrategy"/>
	<bean id="defaultBlShippingOptimizationStrategy"
		  class="com.bl.core.shipping.strategy.impl.DefaultBlShippingOptimizationStrategy"
		  parent="abstractBusinessService">
		<property name="zoneDeliveryModeService" ref="zoneDeliveryModeService"/>
		<property name="blDatePickerService" ref="blDatePickerService"/>
		<property name="blCommerceStockService" ref="blCommerceStockService"/>
	</bean>

	<bean id="blShippingOptimizationJob" class="com.bl.core.job.BlShippingOptimizationJob"
		  parent="abstractJobPerformable">
		<property name="zoneDeliveryModeService" ref="zoneDeliveryModeService"/>
		<property name="blShippingOptimizationStrategy" ref="blShippingOptimizationStrategy"/>
	</bean>
	<!-- Shipping Optimization End-->

	<alias name="defaultBlCartValidationStrategy" alias="cartValidationStrategy"/>
    <bean id="defaultBlCartValidationStrategy" class="com.bl.core.services.strategy.impl.DefaultBlCartValidationStrategy" parent="defaultCartValidationStrategy">
        <property name="blDatePickerService" ref="blDatePickerService"/>
				<property name="blCommerceStockService" ref="blCommerceStockService"/>
				<property name="productService" ref="productService"/>
				<property name="zoneDeliveryModeService" ref="zoneDeliveryModeService"/>
    </bean>

	<!-- BL-626 Email Subscription changes-->
	<alias name="defaultBlEmailSubscriptionService" alias="blEmailSubscriptionService"/>
	<bean id="defaultBlEmailSubscriptionService" class="com.bl.core.subscription.service.impl.DefaultBlEmailSubscriptionService">
		<property name="modelService" ref="modelService"/>
		<property name="blEmailSubscriptionRestService" ref="blEmailSubscriptionRestService"/>
	</bean>

	<alias name="defaultBlEmailSubscriptionRestService" alias="blEmailSubscriptionRestService"/>
	<bean id="defaultBlEmailSubscriptionRestService" class="com.bl.core.subscription.service.impl.DefaultBlEmailSubscriptionRestService">
		<property name="configurationService" ref="configurationService" />
	</bean>

	<!--  BL-626  Email Subscription changes end-->
	
	<alias alias="orderDao" name="defaultBlOrderDao"/>
	<bean id="defaultBlOrderDao" class="com.bl.core.order.dao.impl.DefaultBlOrderDao" parent="defaultOrderDao">
	<property name="userService" ref="userService"/>
	</bean>
	
	<bean id="blPaymentService" class="com.bl.core.payment.service.impl.DefaultBlPaymentService">
		<property name="orderDao" ref="orderDao"/>
		<property name="brainTreeTransactionService" ref="brainTreeTransactionService"/>
		<property name="modelService" ref="modelService"/>
	</bean>
	
	<bean id="blAuthorizePaymentJob" class="com.bl.core.job.BlAuthorizePaymentJob" parent="abstractJobPerformable">
		<property name="blPaymentService" ref="blPaymentService"/>
	</bean>

	<bean id="blHighDemandConstrainedProductJob" class="com.bl.core.job.BlHighDemandConstrainedProductJob" parent="abstractJobPerformable">
	<property name="productDao" ref="productDao" />
	<property name="configurationService" ref="configurationService" />
	<property name="blStockLevelDao" ref="blStockLevelDao"/>
	</bean>


	<!-- Epic [BL-637] : Custom Conditions for rental products promotion-->
	<alias alias="ruleRentalDurationConditionTranslator" name="defaultRuleRentalDurationConditionTranslator" />
	<bean id="defaultRuleRentalDurationConditionTranslator" class="com.bl.core.promotions.ruledefinitions.conditions.RuleRentalDurationConditionTranslator" />

	<alias alias="ruleRentalCartConditionTranslator" name="defaultRuleRentalCartConditionTranslator" />
	<bean id="defaultRuleRentalCartConditionTranslator" class="com.bl.core.promotions.ruledefinitions.conditions.RuleRentalCartConditionTranslator" />

	<alias alias="ruleRentalArrivalDateConditionTranslator" name="defaultRuleRentalArrivalDateConditionTranslator" />
	<bean id="defaultRuleRentalArrivalDateConditionTranslator" class="com.bl.core.promotions.ruledefinitions.conditions.RuleRentalArrivalDateConditionTranslator" />


	<!-- [BL-655]: Custom Actions for rental products promotion-->
	<alias alias="ruleFreeRentalDatesAction" name="defaultRuleFreeRentalDatesAction" />
	<bean id="defaultRuleFreeRentalDatesAction" class="de.hybris.platform.ruledefinitions.actions.DefaultRuleExecutableAction">
		<property name="raoAction" ref="ruleFreeRentalDatesRAOAction"/>
	</bean>
	<alias alias="ruleFreeRentalDatesRAOAction" name="defaultBlRuleFreeRentalDatesRAOAction" />
	<bean id="defaultBlRuleFreeRentalDatesRAOAction" parent="abstractRuleExecutableSupport" class="com.bl.core.promotions.ruledefinitions.actions.BlRuleFreeRentalDatesRAOAction">
		<property name="blCommercePriceService" ref="commercePriceService"/>
		<property name="productService" ref="productService"/>
		<property name="orderEntryRaoToNumberedLineItemConverter" ref="orderEntryRaoToNumberedLineItemConverter"/>
	</bean>

	<bean id="blFreeRentalDatesStrategiesMapping" depends-on="promotionActionStrategiesMapping" parent="mapMergeDirective">
		<property name="key" value="defaultBlRuleFreeRentalDatesRAOAction"/>
		<property name="value" ref="orderTotalAdjustActionStrategy"/>
	</bean>



	<!-- [BL-663]: Custom Actions for used gear products promotion-->
	<alias alias="ruleUsedGearPercentageDiscountAction" name="defaultRuleUsedGearPercentageDiscountAction" />
	<bean id="defaultRuleUsedGearPercentageDiscountAction" class="de.hybris.platform.ruledefinitions.actions.DefaultRuleExecutableAction">
		<property name="raoAction" ref="ruleUGOrderEntryPercentageDiscountRAOAction"/>
	</bean>
	<alias alias="ruleUGOrderEntryPercentageDiscountRAOAction" name="defaultBlUGOrderEntryPercentageDiscountRAOAction" />
	<bean id="defaultBlUGOrderEntryPercentageDiscountRAOAction" parent="abstractRuleExecutableSupport" class="com.bl.core.promotions.ruledefinitions.actions.BlUGOrderEntryPercentageDiscountRAOAction">
		<property name="productService" ref="productService"/>
	</bean>

	<bean id="blUsedGearPercentDiscountStrategiesMapping" depends-on="promotionActionStrategiesMapping" parent="mapMergeDirective">
		<property name="key" value="defaultBlUGOrderEntryPercentageDiscountRAOAction"/>
		<property name="value" ref="orderEntryAdjustActionStrategy"/>
	</bean>

	<!--Added for promo code case sensitivity check-->
	<alias name="defaultBlCouponDao" alias="couponDao" />
	<bean id="defaultBlCouponDao" class="com.bl.core.dao.coupon.impl.DefaultBlCouponDao" parent="defaultCouponDao"/>
	
	<!-- [BL-471]: Serial status change -->

	<alias name="defaultUsedGearSerialStatusChangeHook" alias="usedGearSerialStatusChangeHook" />
	<bean id="defaultUsedGearSerialStatusChangeHook"
		class="com.bl.core.order.hook.impl.BlUsedGearSerialStatusChangeHook">
		<property name="modelService" ref="modelService" />
		<property name="blCartService" ref="cartService"/>
	</bean>

	<bean id="commerceUsedGearSerialStatusHookMergeDirective"
		depends-on="commercePlaceOrderMethodHooks" parent="listMergeDirective">
		<property name="add" ref="usedGearSerialStatusChangeHook" />
	</bean>

	<!--[Bl-652] condition and Actions-->
	<alias alias="ruleTotalDamageWaiverConditionTranslator" name="defaultRuleTotalDamageWaiverConditionTranslator" />
	<bean id="defaultRuleTotalDamageWaiverConditionTranslator" class="com.bl.core.promotions.ruledefinitions.conditions.RuleTotalDamageWaiverConditionTranslator" />

	<alias name="defaultBlShippingActionStrategy" alias="blShippingActionStrategy"/>
	<bean id="defaultBlShippingActionStrategy" parent="abstractRuleActionStrategy" class="com.bl.core.promotions.promotionengineservices.action.impl.DefaultBlShippingActionStrategy" >
		<property name="deliveryModeDao" ref="deliveryModeDao"/>
		<property name="promotionAction" value="com.bl.core.model.RuleBasedFreeDeliveryModeActionModel"/>
	</bean>
	<alias alias="ruleFreeDeliveryModesAction" name="defaultRuleFreeDeliveryModesAction" />
	<bean id="defaultRuleFreeDeliveryModesAction" class="de.hybris.platform.ruledefinitions.actions.DefaultRuleExecutableAction">
		<property name="raoAction" ref="ruleFreeDeliveryModesRAOAction"/>
	</bean>
	<alias alias="ruleFreeDeliveryModesRAOAction" name="defaultBlRuleFreeDeliveryModesRAOAction" />
	<bean id="defaultBlRuleFreeDeliveryModesRAOAction" parent="abstractRuleExecutableSupport" class="com.bl.core.promotions.ruledefinitions.actions.BlRuleFreeDeliveryModesRAOAction">
		<property name="defaultBlRuleEngineCalculationService" ref="ruleEngineCalculationService"/>
		<property name="deliveryModeService" ref="deliveryModeService"/>
	</bean>
	<bean id="blFreeDeliveryModesStrategiesMapping" depends-on="promotionActionStrategiesMapping" parent="mapMergeDirective">
		<property name="key" value="defaultBlRuleFreeDeliveryModesRAOAction"/>
		<property name="value" ref="blShippingActionStrategy"/>
	</bean>
	<bean id="freeDeliveryModesStrategiesMapping" depends-on="actionStrategies" parent="listMergeDirective">
		<property name="add" ref="defaultBlShippingActionStrategy" />
	</bean>

	<alias name="defaultBlRuleEngineCalculationService" alias="ruleEngineCalculationService" />
	<bean id="defaultBlRuleEngineCalculationService" class="com.bl.core.services.calculation.impl.DefaultBlRuleEngineCalculationService" parent="defaultRuleEngineCalculationService">
	</bean>

	<!-- BL-766 Morning pull orders job start-->
	<bean id="pullReadyToShipOrdersJob" class="com.bl.blbackoffice.job.PullReadyToShipOrdersJob" parent="abstractJobPerformable">
		<property name="blConsignmentDao" ref="blConsignmentDao"/>
		<property name="blReadyToShipOrderItemService" ref="blReadyToShipOrderItemService"/>
	</bean>

	<alias name="defaultBlConsignmentDao" alias="blConsignmentDao"/>
	<bean id="defaultBlConsignmentDao" class="com.bl.core.dao.warehouse.impl.DefaultBlConsignmentDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<alias name="defaultBlReadyToShipOrderItemDao" alias="blReadyToShipOrderItemDao"/>
	<bean id="defaultBlReadyToShipOrderItemDao" class="com.bl.core.dao.warehouse.impl.DefaultBlReadyToShipOrderItemDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="modelService" ref="modelService"/>
	</bean>


	<alias name="defaultBlReadyToShipOrderItemService" alias="blReadyToShipOrderItemService"/>
	<bean id="defaultBlReadyToShipOrderItemService" class="com.bl.core.inventory.order.service.impl.DefaultBlReadyToShipOrderItemService">
		<property name="blReadyToShipOrderItemDao" ref="blReadyToShipOrderItemDao"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<!-- BL-766 Morning pull orders job end -->

	<!-- [BL-663]  SOLR Field value Resolver for OnSale solr attribute  and min promotion price-->
	<bean id="blOnSaleProductTagValueResolver" class="com.bl.core.resolvers.BlOnSaleProductTagValueResolver" parent="abstractValueResolver"/>
	<bean id="blUsedGearPromotionPriceValueResolver" class="com.bl.core.resolvers.BlUsedGearPromotionPriceValueResolver" parent="abstractValueResolver">
			<property name="baseStoreService" ref="baseStoreService"/>
			<property name="blPromotionService" ref="blPromotionService"/>
			<property name="blPricingService" ref="blPricingService"/>
	</bean>

	<!--[BL-663] Added promotion Service for promotion active or not-->
	<alias name="defaultBlPromotionService" alias="blPromotionService"/>
	<bean id="defaultBlPromotionService" class="com.bl.core.promotions.promotionengineservices.service.impl.DefaultBlPromotionService">
		<property name="promotionDao" ref="promotionDao"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="promotionsService" ref="promotionsService"/>
	</bean>
	<!--[BL-663] Added facet on sale on PLP/SLP -->
	<bean id="blOnSaleFacetNameProvider"
		class="com.bl.core.search.solrfacetsearch.provider.impl.BlOnSaleFacetNameProvider"/>
	<!-- BL-753:This interceptor is added to update consignment in order notes -->
	<alias name="blOrderPrepareInterceptor" alias="blOrderPrepareInterceptor"/>
	<bean id="blOrderPrepareInterceptor"
		class="com.bl.core.model.interceptor.BlOrderPrepareInterceptor">
		<property name="blOrderNoteService" ref="blOrderNoteService"/>
		<property name="eventPublishingSubmitOrderStrategy" ref="eventPublishingSubmitOrderStrategy"/>
		<property name="blEspEventService" ref="blEspEventService"/>
	</bean>

	<bean id="blOrderPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="blOrderPrepareInterceptor"/>
		<property name="typeCode" value="AbstractOrder"/>
	</bean>

	<!-- BL-753:This interceptor is added to update order and other consignment in order notes. -->
	<alias name="blConsignmentPrepareInterceptor" alias="blConsignmentPrepareInterceptor"/>
	<bean id="blConsignmentPrepareInterceptor" class="com.bl.core.model.interceptor.BlConsignmentPrepareInterceptor">
		<property name="blOrderNoteService" ref="blOrderNoteService"/>
		<property name="blEspEventService" ref="blEspEventService"/>
	</bean>

	<bean id="blConsignmentPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="blConsignmentPrepareInterceptor"/>
		<property name="typeCode" value="Consignment"/>
	</bean>
	
	<!-- BL-633:This validator used to validate blproduct data before saving it. -->
	<alias name="blProductValidateInterceptor" alias="blProductValidateInterceptor"/>
	<bean id="blProductValidateInterceptor"	class="com.bl.core.model.interceptor.BlProductValidateInterceptor">
	</bean>

	<bean id="blProductValidateInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blProductValidateInterceptor"/>
		<property name="typeCode" value="BlProduct"/>
	</bean>

	<!-- [BL-781]: This is to fetch the wishlist entries-->
	<alias name="defaultBlWishlistService" alias="blwishlistService"/>
	<bean id="defaultBlWishlistService" class="com.bl.core.services.wishlist.impl.DefaultBlWishlistService" parent="defaultWishlistService">
		<property name="blwishlistDao" ref="blwishlistDao"/>
	</bean>

	<!-- [BL-781]: This is to fetch the wishlist entries from the Database-->
	<alias name="defaultBlWishlistDao" alias="blwishlistDao"/>
	<bean id="defaultBlWishlistDao" class="com.bl.core.wishlist.impl.DefaultBlWishlistDao" parent="defaultWishlistDao">
		<property name="userService" ref="userService"/>
		<property name="pagedFlexibleSearchService" ref="pagedFlexibleSearchService"/>
	</bean>
		<bean id="defaultBlVerificationDocumentDao" class="com.bl.core.services.document.dao.impl.DefaultBlVerificationDocumentDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<alias alias="boxDimensionService" name="defaultBoxDimensionService" />
	 <bean name="defaultBoxDimensionService" class="com.bl.core.services.box.impl.BoxDimensionServiceImpl">
        <property name="blStateWarehouseMappingDao" ref="blStateWarehouseMappingDao"/>
    </bean>

	<!-- [BL-753]: Dynamic attribute handler for attribute orderType in Type Consignment -->
	<bean id="consignmentOrderTypeHandler" class="com.bl.core.attributes.ConsignmentOrderTypeHandler" />

	<!--BL-795 Adding attribute handler class for dynamic attribute skuFirmwareVersion-->
	<bean id="bLRequiredFirmwareVersionHandler" class="com.bl.core.model.handler.BlRequiredFirmwareVersionHandler"/>

	<alias alias="productService" name="defaultBlProductService"/>
	<bean id="defaultBlProductService" class="com.bl.core.product.service.impl.DefaultBlProductService"	parent="defaultProductService">
		<property name="userService" ref="userService"/>
		<property name="catalogVersionDao" ref="catalogVersionDao"/>
		<property name="searchRestrictionService" ref="searchRestrictionService"/>
	</bean>
	
	<!--BL-795 Adding attribute handler class for dynamic attribute conditionRatingOverallScore-->
	<bean id="blConditionRatingOverallScoreHandler" class="com.bl.core.model.handler.BlConditionRatingOverallScoreHandler">
		<property name="blPricingService" ref="blPricingService"/>
		<property name="blProductService" ref="productService"/>
	</bean>


	<!--Added for extend rental order -->

	<bean id="defaultBlExtendOrderService" class="com.bl.core.services.extendorder.impl.DefaultBlExtendOrderService">
		<property name="modelService" ref="modelService"/>
		<property name="orderIDGenerator" ref="orderCodeGenerator"/>
		<property name="userService" ref="userService"/>
		<property name="customerAccountService" ref="customerAccountService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
		<property name="blStockLevelDao" ref="blStockLevelDao"/>
		<property name="defaultBlESPEventService" ref="blEspEventService"/>
	</bean>

	<!--Coupon for rental extend order -->
	<bean id="defaultBlCouponService" class="com.bl.core.coupon.impl.DefaultBlCouponService" parent="defaultCouponService">
		<property name="defaultBlCouponManagementService" ref="defaultBlCouponManagementService"/>
	</bean>

	<alias name="defaultBlExtendedOrderDao" alias="extendedOrderDao"/>
	<bean id="defaultBlExtendedOrderDao" class=" com.bl.core.dao.promotion.DefaultBlExtendedOrderDao" parent="defaultExtendedOrderDao"/>

	<!--Added for extend order coupon promotion-->

	<bean id="defaultBlCouponManagementService" class="com.bl.core.coupon.impl.DefaultBlCouponManagementService" parent="defaultCouponManagementService">
	</bean>
	
	<!-- Interceptor for NotesModel to perform custom logic before saving the model -->
	<alias name="blNotesPrepareInterceptor" alias="blNotesPrepareInterceptor"/>
	<bean id="blNotesPrepareInterceptor" class="com.bl.core.model.interceptor.BlNotesPrepareInterceptor">
		<property name="userService" ref="userService"/>
	</bean>
	
	<!-- Adding NotesModel interceptor to Interceptor mapping list -->
	<bean id="blNotesPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blNotesPrepareInterceptor"/>
		<property name="typeCode" value="Notes"/>
	</bean>

	<bean id="blVerificationDocumentService" class="com.bl.core.services.documentupload.impl.DefaultBlVerificationDocumentService">
		<property name="userService" ref="userService"/>
		<property name="modelService" ref="modelService"/>
		<property name="blVerificationDocumentDao" ref="defaultBlVerificationDocumentDao"/>
	</bean>

	<alias name="defaultBlOrderNoteService" alias="blOrderNoteService"/>
	<bean id="defaultBlOrderNoteService" class="com.bl.core.services.order.note.impl.DefaultBlOrderNoteService">
		<property name="modelService" ref="modelService"/>
	</bean>
	
	<!--BL-819 MarkDirtyPriority -->
	<bean id="blMarkDirtyPriorityJob" class="com.bl.core.job.BlMarkDirtyPrioritySerialsJob" parent="abstractJobPerformable">
		<property name="blInventoryScanToolService" ref="blInventoryScanToolService"/>
	</bean>
	<!-- [BL-668]: Custom Actions for rental products promotion-->
	<alias alias="ruleExtendedFreeRentalDaysAction" name="defaultRuleExtendedFreeRentalDaysAction" />
	<bean id="defaultRuleExtendedFreeRentalDaysAction" class="de.hybris.platform.ruledefinitions.actions.DefaultRuleExecutableAction">
		<property name="raoAction" ref="blExtendedFreeRentalDaysRAOAction"/>
	</bean>

	<alias alias="blExtendedFreeRentalDaysRAOAction" name="defaultBlExtendedFreeRentalDaysRAOAction" />
	<bean id="defaultBlExtendedFreeRentalDaysRAOAction" parent="abstractRuleExecutableSupport" class="com.bl.core.promotions.ruledefinitions.actions.BlExtendedFreeRentalDaysRAOAction">
		<property name="blDatePickerService" ref="blDatePickerService"/>
		<property name="blCommercePriceService" ref="commercePriceService"/>
		<property name="productService" ref="productService"/>
		<property name="cartService" ref="cartService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<bean id="blExtendedFreeRentalDatesStrategiesMapping" depends-on="promotionActionStrategiesMapping" parent="mapMergeDirective">
	<property name="key" value="defaultBlExtendedFreeRentalDaysRAOAction"/>
	<property name="value" ref="orderTotalAdjustActionStrategy"/>
	</bean>

	<!--BL-828 Marking consignments cleanCompleteFlag start -->
	<bean id="markConsignmentsCleanJob" class="com.bl.core.job.MarkReadyToShipConsignmentsCleanJob"
		parent="abstractJobPerformable">
		<property name="blConsignmentDao" ref="blConsignmentDao"/>
		<property name="configurationService" ref="configurationService" />
	</bean>

	<!--BL-828 end -->
	
	<alias name="defaultBlRepairLogService" alias="blRepairLogService"/>
	<bean id="defaultBlRepairLogService" class="com.bl.core.repair.log.service.impl.DefaultBlRepairLogService">
		<property name="modelService" ref="modelService"/>
		<property name="blShipmentCreationService" ref="blShipmentCreationService"/>
	</bean>
	
	<!-- Interceptor for ConsignmentEntryModel to perform custom logic before saving the model -->
	<alias name="blConsignmentEntryPrepareInterceptor" alias="blConsignmentEntryPrepareInterceptor"/>
	<bean id="blConsignmentEntryPrepareInterceptor" class="com.bl.core.model.interceptor.BlConsignmentEntryPrepareInterceptor"/>
	
	<!-- Adding ConsignmentEntryModel interceptor to Interceptor mapping list -->
	<bean id="blConsignmentEntryPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blConsignmentEntryPrepareInterceptor"/>
		<property name="typeCode" value="ConsignmentEntry"/>
	</bean>
	
	<!-- Interceptor for ConsignmentEntryModel to perform custom logic before saving the model -->
	<alias name="blRepairLogPrepareInterceptor" alias="blRepairLogPrepareInterceptor"/>
	<bean id="blRepairLogPrepareInterceptor" class="com.bl.core.model.interceptor.BlRepairLogPrepareInterceptor">
		<property name="blProductDao" ref="productDao"/>
		<property name="userService" ref="userService"/>
		<property name="blRepairLogService" ref="blRepairLogService"/>
	</bean>
	
	<!-- Adding BlRepairLogModel interceptor to Interceptor mapping list -->
	<bean id="blBlRepairLogPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blRepairLogPrepareInterceptor"/>
		<property name="typeCode" value="BlRepairLog"/>
	</bean>
	
	<!-- Adding InHouseRepairLogModel interceptor to Interceptor mapping list -->
	<bean id="blInHouseRepairLogPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blRepairLogPrepareInterceptor"/>
		<property name="typeCode" value="InHouseRepairLog"/>
	</bean>
	
	<!-- Adding VendorRepairLogModel interceptor to Interceptor mapping list -->
	<bean id="blVendorRepairLogPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blRepairLogPrepareInterceptor"/>
		<property name="typeCode" value="VendorRepairLog"/>
	</bean>
	
	<!-- Adding CustomerResponsibleRepairLogModel interceptor to Interceptor mapping list -->
	<bean id="blCustomerResponsibleRepairLogPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blRepairLogPrepareInterceptor"/>
		<property name="typeCode" value="CustomerResponsibleRepairLog"/>
	</bean>
	
	<!-- Adding PartsNeededRepairLogModel interceptor to Interceptor mapping list -->
	<bean id="blPartsNeededRepairLogPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blRepairLogPrepareInterceptor"/>
		<property name="typeCode" value="PartsNeededRepairLog"/>
	</bean>
	
	<bean id="blDamageWaiverForRepairLogHandler" class="com.bl.core.model.handler.BlDamageWaiverForRepairLogHandler"/>

	<alias name="defaultBlReturnOrderService" alias="blReturnOrderService"/>
    <bean id="defaultBlReturnOrderService" parent="returnService" class="com.bl.core.order.impl.DefaultBlReturnOrderService" />

	<bean id="blTotalForPartsAndLabourChargeHandler" class="com.bl.core.model.handler.BlTotalForPartsAndLabourChargeHandler"/>
	
	<bean id="blBufferInventoryService" class="com.bl.core.bufferinventory.service.impl.DefaultBlBufferInventoryService" >
		<property name="productDao" ref="productDao" />
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="modelService" ref="modelService" />
		<property name="blStockLevelDao" ref="blStockLevelDao" />
		<property name="productService" ref="productService" />
		<property name="catalogVersionDao" ref="catalogVersionDao" />
		<property name="blStockService" ref="blStockService"/>
	</bean>
	
	<bean id="blBufferInventoryJob" class="com.bl.core.job.BlBufferInventoryJob" parent="abstractJobPerformable">
		<property name="blBufferInventoryService" ref="blBufferInventoryService"/>
	</bean>

	<!--Custom  code for place order startegy -->
	<alias alias="commercePlaceOrderStrategy" name="defaultBlCommercePlaceOrderStrategy"/>
	<bean id="defaultBlCommercePlaceOrderStrategy"
		class="com.bl.core.order.strategy.DefaultBlCommercePlaceOrderStrategy" parent="defaultCommercePlaceOrderStrategy">
	</bean>

	<!-- [BL-983] New gear Related changes-->
	<bean id="blRetailGearPriceValueResolver" class="com.bl.core.search.solrfacetsearch.provider.impl.BlRetailGearPriceValueResolver"
		parent="abstractValueResolver"/>

	<alias name="defaultNewGearOrderStatusChangeHook" alias="newGearOrderStatusChangeHook" />
	<bean id="defaultNewGearOrderStatusChangeHook"
		class="com.bl.core.order.hook.impl.BlNewGearOrderStatusChangeHook">
		<property name="modelService" ref="modelService" />
		<property name="defaultBlESPEventService" ref="blEspEventService" />
	</bean>

	<bean id="commerceNewGearOrderStatusHookMergeDirective"
		depends-on="commercePlaceOrderMethodHooks" parent="listMergeDirective">
		<property name="add" ref="newGearOrderStatusChangeHook" />
	</bean>


	<!--BL-82 Added for creating custom method to set custom parameter -->

	<alias name="defaultBlSolrFacetSearchProductSearchStrategy" alias="commerceSolrFacetSearchProductSearchStrategy" />
	<bean id="defaultBlSolrFacetSearchProductSearchStrategy" class="com.bl.core.services.strategy.impl.DefaultBlSolrFacetSearchProductSearchStrategy" parent="defaultCommerceSolrFacetSearchProductSearchStrategy">
	</bean>

	<alias name="defaultBlSolrProductSearchService" alias="defaultCommerceProductSearchService" />
	<bean id="defaultBlSolrProductSearchService" class="com.bl.core.services.solrfacetsearch.impl.DefaultBlSolrProductSearchService" parent="defaultCommerceSolrProductSearchService">
		<property name="defaultBlSolrFacetSearchProductSearchStrategy" ref="commerceSolrFacetSearchProductSearchStrategy"/>
	</bean>


	<!-- Added for creating custom method to set custom parameter -->

	<alias name="blSerialProductValidateInterceptor" alias="blSerialProductValidateInterceptor"/>
	<bean id="blSerialProductValidateInterceptor"	class="com.bl.core.model.interceptor.BlSerialProductValidateInterceptor"/>
	
	<bean id="blSerialProductValidateInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blSerialProductValidateInterceptor"/>
		<property name="typeCode" value="BlSerialProduct"/>
	</bean>


	<!--Added for order history-->


	<alias name="defaultBlCustomerAccountDao" alias="customerAccountDao"/>
	<bean id="defaultBlCustomerAccountDao" class="com.bl.core.order.dao.impl.DefaultBlCustomerAccountDao" parent="defaultCustomerAccountDao">
	</bean>
	
	<!--Cancel and Refund-->
	<alias alias="blCustomCancelRefundDao" name="defaultBlCustomCancelRefundDao"/>
	<bean id="defaultBlCustomCancelRefundDao" class="com.bl.core.services.cancelandrefund.dao.impl.DefaultBlCustomCancelRefundDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<alias alias="blCustomCancelRefundService" name="defaultBlCustomCancelRefundService"/>
	<bean id="defaultBlCustomCancelRefundService" class="com.bl.core.services.cancelandrefund.service.impl.DefaultBlCustomCancelRefundService" >
		<property name="blCustomCancelRefundDao" ref="blCustomCancelRefundDao"/>
		<property name="brainTreePaymentService" ref="brainTreePaymentService"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="paymentService" ref="paymentService"/>
		<property name="modelService" ref="modelService"/>
		<property name="returnService" ref="returnService"/>
	</bean>
	
	<alias name="defaultBlBlackoutDatesDao" alias="blBlackoutDatesDao"/>
	<bean id="defaultBlBlackoutDatesDao" class="com.bl.core.blackout.date.dao.impl.DefaultBlBlackoutDatesDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

  <!--BL-27: This process is override to call own strategy to provide email related things.-->
	<bean depends-on="processContextResolutionStrategyMap" parent="mapMergeDirective">
		<property name="key">
			<value type="java.lang.Class">de.hybris.platform.processengine.model.BusinessProcessModel</value>
		</property>
		<property name="value" ref="storeFrontProcessContextStrategy"/>
	</bean>
	
	<alias name="blWarehousePrepareInterceptor" alias="blWarehousePrepareInterceptor"/>
	<bean id="blWarehousePrepareInterceptor" class="com.bl.core.model.interceptor.BlWarehousePrepareInterceptor">
		<property name="blStockService" ref="blStockService"/>
	</bean>
	
	<bean id="blWarehousePrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blWarehousePrepareInterceptor"/>
		<property name="typeCode" value="Warehouse"/>
	</bean> 
	
	<alias name="blBlackoutDatePrepareInterceptor" alias="blBlackoutDatePrepareInterceptor"/>
    <bean id="blBlackoutDatePrepareInterceptor"    class="com.bl.core.model.interceptor.BlBlackoutDatePrepareInterceptor"/>    

    <bean id="blBlackoutDatePrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping" >
		<property name="interceptor" ref="blBlackoutDatePrepareInterceptor"/>
		<property name="typeCode" value="BlBlackoutDate"/>
    </bean>   

    <alias name="defaultBlBlackoutDateService" alias="blBlackoutDateService"/>
	<bean id="defaultBlBlackoutDateService" class="com.bl.core.services.blackout.impl.DefaultBlBlackoutDateService">
		<property name="blConsignmentDao" ref="blConsignmentDao"/>
		<property name="modelService" ref="modelService"/>
		<property name="blCartService" ref="cartService"/>
	</bean>    

    <!--BL-1089-->
	<bean id="blChangeOrderReturnDateJob" class="com.bl.core.job.BlChangeOrderReturnDateJob" parent="abstractJobPerformable">
		<property name="blBlackoutDateService" ref="blBlackoutDateService" />
		<property name="blDatePickerService" ref="blDatePickerService" />
		<property name="blBlackoutDatesDao" ref="blBlackoutDatesDao"/>
	</bean>
	
	<alias name="defaultBlConsignmentEntryService" alias="blConsignmentEntryService"/>
	<bean id="defaultBlConsignmentEntryService" class="com.bl.core.services.consignment.entry.impl.DefaultBlConsignmentEntryService">
		<property name="blConsignmentDao" ref="blConsignmentDao"/>
		<property name="modelService" ref="modelService"/>
		<property name="sessionService" ref="sessionService"/>
        <property name="searchRestrictionService" ref="searchRestrictionService"/>
	</bean>

	<bean id="blCalculateCostForLaborHandler" class="com.bl.core.model.handler.BlCalculateCostForLaborHandler"/>
	<bean id="blRepairLogSerialConditionRatingHandler" class="com.bl.core.model.handler.BlRepairLogSerialConditionRatingHandler"/>

	<!--BL-1048-->
	<bean id="blShareASaleJob" class="com.bl.core.job.BlShareASaleJob" parent="abstractJobPerformable">
		<property name="orderDao" ref="orderDao"/>
	</bean>

	<alias name="defaultBlRepairLogDao" alias="blRepairLogDao"/>
	<bean id="defaultBlRepairLogDao" class="com.bl.core.repair.log.dao.impl.DefaultBlRepairLogDao">
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<!--ESP Event Rest Service-->
	<bean id="blESPEventRestService" class="com.bl.esp.service.impl.DefaultBlESPEventRestService">
		<property name="configurationService" ref="configurationService" />
	</bean>

	<!-- Order Confirmation populator ESP -->
	<bean id="blOrderConfirmationRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderConfirmationRequestPopulator">
	</bean>
	
	<!-- Order Canceled populator ESP -->
	<bean id="blOrderCanceledRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderCanceledRequestPopulator">
	</bean>
	
	<!-- Order Payment Declined populator ESP -->
	<bean id="blOrderPaymentDeclinedRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderPaymentDeclinedRequestPopulator">
	</bean>
	
	<!-- Order Ready For pickup populator ESP -->
	<bean id="blOrderReadyForPickupRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderReadyForPickupRequestPopulator">
	</bean>
	
	<!-- Order New shipping populator ESP -->
	<bean id="blOrderNewShippingRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderNewShippingRequestPopulator">
	</bean>

	<!-- Order Verification more info populator ESP -->
	<bean id="blOrderVerificationMoreInfoRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderVerificationMoreInfoRequestPopulator">
	</bean>

	<!-- Order Verification coi needed populator ESP -->
	<bean id="blOrderVerificationCOIneededRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderVerificationCOIneededRequestPopulator">
	</bean>

	<!-- Order Verification Required populator ESP -->
	<bean id="blOrderVerificationRequiredRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderVerificationRequiredRequestPopulator">
	</bean>

	<!-- Order Ready For pickup populator ESP -->
	<bean id="blOrderRefundRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderRefundRequestPopulator">
	</bean>

	<!-- Order Verification Completed populator ESP -->
	<bean id="blOrderVerificationCompletedRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderVerificationCompletedRequestPopulator">
	</bean>

	<!--ESP Event Common populator -->
	<bean id="espEventCommonPopulator"
		class="com.bl.core.esp.populators.ESPEventCommonPopulator" abstract="true">
		<property name="configurationService" ref="configurationService"/>
		<property name="productService" ref="productService"/>
	</bean>

	<!--ESP Event service -->
	<bean id="blEspEventService"
		class="com.bl.core.esp.service.impl.DefaultBlESPEventService">
		<property name="blOrderConfirmationRequestPopulator" ref="blOrderConfirmationRequestPopulator"/>
		<property name="blOrderVerificationMoreInfoRequestPopulator" ref="blOrderVerificationMoreInfoRequestPopulator"/>
		<property name="blOrderVerificationCOIneededRequestPopulator" ref="blOrderVerificationCOIneededRequestPopulator"/>
		<property name="blOrderCanceledRequestPopulator" ref="blOrderCanceledRequestPopulator"/>
		<property name="blOrderExceptionsRequestPopulator" ref="blOrderExceptionsRequestPopulator"/>
		<property name="blOrderUnboxedRequestPopulator" ref="blOrderUnboxedRequestPopulator"/>
		<property name="blOrderPaymentDeclinedRequestPopulator" ref="blOrderPaymentDeclinedRequestPopulator"/>
		<property name="blOrderVerificationRequiredRequestPopulator" ref="blOrderVerificationRequiredRequestPopulator"/>
		<property name="blOrderVerificationCompletedRequestPopulator" ref="blOrderVerificationCompletedRequestPopulator"/>
		<property name="blOrderDepositRequestPopulator" ref="blOrderDepositRequestPopulator"/>
		<property name="blESPEventRestService" ref="blESPEventRestService"/>
		<property name="blOrderReadyForPickupRequestPopulator" ref="blOrderReadyForPickupRequestPopulator"/>
		<property name="blOrderNewShippingRequestPopulator" ref="blOrderNewShippingRequestPopulator"/>
		<property name="blOrderShippedRequestPopulator" ref="blOrderShippedRequestPopulator"/>
		<property name="blOrderPickedUpRequestPopulator" ref="blOrderPickedUpRequestPopulator"/>
		<property name="blExtendOrderRequestPopulator" ref="blExtendOrderRequestPopulator"/>
		<property name="blExtraItemRequestPopulator" ref="blExtraItemRequestPopulator"/>
		<property name="blOrderRefundRequestPopulator" ref="blOrderRefundRequestPopulator"/>
		<property name="modelService" ref="modelService"/>
	</bean>


	<!-- Order Exception populator ESP -->
	<bean id="blOrderExceptionsRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderExceptionsRequestPopulator">
		<property name="productService" ref="productService"/>
	</bean>

	<!-- Order unboxed populator ESP -->
	<bean id="blOrderUnboxedRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderUnboxedRequestPopulator">
	</bean>

	<!-- Inventory Cycle count -->
	<bean id="blInventoryCycleCountJob" name="blInventoryCycleCountJob" class="com.bl.core.job.BlInventoryCycleCountJob">
		<property name="blInventoryCycleCountService" ref="blInventoryCycleCountService"/>
	</bean>

	<bean id="blInventoryCycleCountDao" name="blInventoryCycleCountDao"
		  class="com.bl.core.inventory.cycle.count.dao.impl.DefaultBlInventoryCycleCountDao"/>

	<bean id="blInventoryCycleCountService" name="blInventoryCycleCountService"
		  class="com.bl.core.inventory.cycle.count.service.impl.DefaultBlInventoryCycleCountService">
		<property name="blInventoryCycleCountDao" ref="blInventoryCycleCountDao"/>
		<property name="blInventoryScanToolDao" ref="blInventoryScanToolDao"/>
		<property name="userService" ref="userService"/>
		<property name="modelService" ref="modelService"/>
	</bean>

	<alias name="blInventoryCycleCountPrepareInterceptor" alias="blInventoryCycleCountPrepareInterceptor"/>
	<bean id="blInventoryCycleCountPrepareInterceptor" class="com.bl.core.model.interceptor.BlInventoryCycleCountPrepareInterceptor">
		<property name="keyGenerator" ref="iccIdGenerator"/>
	</bean>

	<bean id="iccIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
		<property name="key" value="${keygen.inventoryCycleCount.id.name}"/>
		<property name="digits" value="${keygen.inventoryCycleCount.id.digits}"/>
		<property name="start" value="${keygen.inventoryCycleCount.id.start}"/>
		<property name="type" value="${keygen.inventoryCycleCount.id.type}"/>
		<property name="template" value="${keygen.inventoryCycleCount.id.template}"/>
	</bean>

	<bean id="blInventoryCycleCountPrepareInterceptorMapping"
		  class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="blInventoryCycleCountPrepareInterceptor"/>
		<property name="typeCode" value="BlInventoryCycleCount"/>
	</bean>
	<!-- End Inventory Cycle Count -->

	<!-- Order Deposit populator ESP -->
	<bean id="blOrderDepositRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderDepositRequestPopulator">
	</bean>

	<!-- Order Shipped  populator ESP -->
	<bean id="blOrderShippedRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderShippedRequestPopulator">
	</bean>

	<!-- Order Pickedup populator ESP -->
	<bean id="blOrderPickedUpRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlOrderPickedUpRequestPopulator">
	</bean>

	<!-- Extend Order populator ESP -->
	<bean id="blExtendOrderRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlExtendOrderRequestPopulator">
	</bean>

	<alias name="blAddressPrepareInterceptor" alias="blAddressPrepareInterceptor"/>
	<bean id="blAddressPrepareInterceptor"
		class="com.bl.core.model.interceptor.BlAddressPrepareInterceptor">
		<property name="blEspEventService" ref="blEspEventService"/>
		<property name="defaultBlUserService" ref="userService"/>
	</bean>

	<bean id="blAddressPrepareInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="blAddressPrepareInterceptor"/>
		<property name="typeCode" value="Address"/>
	</bean>
	
	<alias name="defaultBlUserService" alias="userService" />
	<bean id="defaultBlUserService" parent="defaultUserService" class="com.bl.core.services.customer.impl.DefaultBlUserService">
	</bean>

	<!-- Order Extra Item populator ESP -->
	<bean id="blExtraItemRequestPopulator" parent="espEventCommonPopulator"
		class="com.bl.core.esp.populators.BlExtraItemRequestPopulator">
	</bean>
	
</beans>
