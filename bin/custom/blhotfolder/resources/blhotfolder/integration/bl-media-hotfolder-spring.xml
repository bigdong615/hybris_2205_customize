<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2020 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

	<bean id="batchMediaConverterMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
        p:mapping="MEDIA"
        p:converter-ref="batchMediaConverter"/>
          
   	<bean id="batchMediaContainerConverterMapping" 
   		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
	  	p:mapping="MEDIA" 
	  	p:converter-ref="batchMediaContainerConverter"/>
	  
  	<bean id="batchProductMediaConverterMapping" 
	  	class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
	  	p:mapping="PRODUCTMEDIA" 
	  	p:converter-ref="batchProductMediaConverter"/>

 <!-- Transformer converters mappings -->
	<bean id="batchMediaConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Insert Media
				INSERT_UPDATE Media;mediaFormat(qualifier);code[unique=true];realFileName;altText;mime[default='image/jpeg'];URL;folder(qualifier)[default=images];$catalogVersion
			</value>
		</property>
		<property name="impexRow">
			<value> 
				;515Wx515H;{+0}_Large;{1};{2};{3};{7};{4}
				;300Wx300H;{+0}_Medium;{1};{2};{3};{6};{4}
				;96Wx96H;{+0}_Small;{1};{2};{3};{5};{4}
			</value>
		</property>
	</bean>
	
	<bean id="batchMediaContainerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Import media container
				INSERT_UPDATE MediaContainer;qualifier[unique=true];medias(code, $catalogVersion);$catalogVersion
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0};{+0}_Small,{+0}_Medium,{+0}_Large;
			</value>
		</property>
	</bean>
	
	<bean id="batchProductMediaConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
            <value>#{defaultImpexProductHeader}
                $picture=picture(code, $catalogVersion)[cellDecorator=com.bl.batch.imports.translator.BlMediaDecoratorThumbnail]
				$thumbnail=thumbnail(code, $catalogVersion)[cellDecorator=com.bl.batch.imports.translator.BlMediaDecoratorImage]
				$galleryImages=galleryImages(qualifier, $catalogVersion)
                # Import product media
                UPDATE Product;code[unique=true];$picture;$thumbnail;$galleryImages;$catalogVersion
            </value>
        </property>
        <property name="impexRow">
            <value>;{+0};{+1};{+1};{+1};</value>
        </property>
	</bean>

</beans>
